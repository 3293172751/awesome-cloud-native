import{_ as r,r as t,o,c,a as e,b as n,w as p,e as s,d as i}from"./app.9f3e6cab.js";const d={},u={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},m=s("author"),v=e("h1",{id:"\u7B2C79\u8282-openim-\u4F7F\u7528-harbor-\u642D\u5EFA\u4F01\u4E1A\u7EA7\u955C\u50CF\u4ED3\u5E93",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#\u7B2C79\u8282-openim-\u4F7F\u7528-harbor-\u642D\u5EFA\u4F01\u4E1A\u7EA7\u955C\u50CF\u4ED3\u5E93","aria-hidden":"true"},"#"),s(" \u7B2C79\u8282 OpenIM \u4F7F\u7528 Harbor \u642D\u5EFA\u4F01\u4E1A\u7EA7\u955C\u50CF\u4ED3\u5E93")],-1),b=e("div",null,[e("a",{href:"78.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),e("a",{href:"80.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),h=e("br",null,null,-1),k=s("\u2764\uFE0F\u{1F495}\u{1F495}\u65B0\u65F6\u4EE3\u62E5\u62B1\u4E91\u539F\u751F\uFF0C\u4E91\u539F\u751F\u5177\u6709\u73AF\u5883\u7EDF\u4E00\u3001\u6309\u9700\u4ED8\u8D39\u3001\u5373\u5F00\u5373\u7528\u3001\u7A33\u5B9A\u6027\u5F3A\u7279\u70B9\u3002Myblog:"),g={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},y=s("http://nsddd.top"),f=i(`<hr><p>[TOC]</p><h2 id="\u9700\u6C42" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42" aria-hidden="true">#</a> \u9700\u6C42</h2><p>OpenIM \u63D0\u4F9B\u4E86\u591A\u79CD\u516C\u5171\u7684\u955C\u50CF\u6CE8\u518C\u5730\u5740\uFF0C\u6BD4\u5982\u8BF4 aliyun\uFF0C github\uFF0C Docker hub ~</p><p>\u9605\u8BFB https://github.com/openimsdk/open-im-server/blob/main/docs/conversions/images.md \u83B7\u53D6\u66F4\u591A\u7684\u955C\u50CF\u6784\u5EFA\u6307\u5357\u3002</p><p>\u5927\u90E8\u5206\u4F01\u4E1A\u90FD\u4F1A\u9009\u62E9\u81EA\u5DF1\u505A\u955C\u50CF\u4ED3\u5E93\uFF0C\u4F7F\u7528 Harbor \u6765\u642D\u5EFA\u4F01\u4E1A\u7EA7\u7684\u955C\u50CF\u4ED3\u5E93\uFF0C\u5C06\u5B83\u96C6\u6210 CICD Pipeline \u6D41\u7A0B\u4E2D\uFF0C\u6700\u7EC8\u66FF\u6362 Docker Hub\uFF0C\u8FDB\u4E00\u6B65\u964D\u4F4E\u955C\u50CF\u5B58\u50A8\u7684\u6210\u672C\u3002</p><p>\u6B64\u5916\uFF0C\u5728\u751F\u4EA7\u73AF\u5883\u4E0B\uFF0CHarbor \u4E00\u822C\u90FD\u4F1A\u5F00\u542F TLS\uFF0C\u6240\u4EE5\u4F60\u8FD8\u9700\u8981\u51C6\u5907\u4E00\u4E2A\u53EF\u7528\u7684\u57DF\u540D\u3002</p><blockquote><p>\u4E2D\u56FD\u7684\u670D\u52A1\u5668\u4F7F\u7528\u57DF\u540D\uFF0C\u9700\u8981\u5BF9\u57DF\u540D\u8FDB\u884C\u5907\u6848</p></blockquote><h2 id="\u5B89\u88C5-helm" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-helm" aria-hidden="true">#</a> \u5B89\u88C5 Helm</h2><p>Helm\uFF0C\u4EE5\u53CA \u96C6\u7FA4\u7684\u90E8\u7F72\u53C2\u8003 https://github.com/openimsdk/open-im-server/tree/main/deployments</p><h2 id="\u5B89\u88C5-cert-manager" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-cert-manager" aria-hidden="true">#</a> \u5B89\u88C5 Cert-manager</h2><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5B89\u88C5 Cert-manager\uFF0C\u5B83\u4F1A\u4E3A\u6211\u4EEC\u81EA\u52A8\u7B7E\u53D1\u514D\u8D39\u7684 Let\u2019s Encrypt HTTPS \u8BC1\u4E66\uFF0C\u5E76\u5728\u8FC7\u671F\u524D\u81EA\u52A8\u7EED\u671F\u3002</p><p>\u9996\u5148\uFF0C\u8FD0\u884C helm repo add \u547D\u4EE4\u6DFB\u52A0\u5B98\u65B9 Helm \u4ED3\u5E93\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo <span class="token function">add</span> jetstack https://charts.jetstack.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u8FD0\u884C helm repo update \u66F4\u65B0\u672C\u5730\u7F13\u5B58\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u8FD0\u884C helm install \u6765\u5B89\u88C5 Cert-manager\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm <span class="token function">install</span> cert-manager jetstack/cert-manager <span class="token punctuation">\\</span>
<span class="token parameter variable">--namespace</span> cert-manager <span class="token punctuation">\\</span>
--create-namespace <span class="token punctuation">\\</span>
<span class="token parameter variable">--version</span> v1.10.0 <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerName</span><span class="token operator">=</span>letsencrypt-prod <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerKind</span><span class="token operator">=</span>ClusterIssuer <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerGroup</span><span class="token operator">=</span>cert-manager.io <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">installCRDs</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5916\uFF0C\u8FD8\u9700\u8981\u4E3A Cert-manager \u521B\u5EFA ClusterIssuer\uFF0C\u7528\u6765\u63D0\u4F9B\u7B7E\u53D1\u673A\u6784\u3002\u5C06\u4E0B\u9762\u7684\u5185\u5BB9\u4FDD\u5B58\u4E3A <code>cluster-issuer.yaml</code>\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> cert<span class="token punctuation">-</span>manager.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterIssuer
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> letsencrypt<span class="token punctuation">-</span>prod
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">acme</span><span class="token punctuation">:</span>
    <span class="token key atrule">server</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//acme<span class="token punctuation">-</span>v02.api.letsencrypt.org/directory
    <span class="token key atrule">email</span><span class="token punctuation">:</span> <span class="token string">&quot;cubxxw@openim.io&quot;</span>
    <span class="token key atrule">privateKeySecretRef</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> letsencrypt<span class="token punctuation">-</span>prod
    <span class="token key atrule">solvers</span><span class="token punctuation">:</span>    
    <span class="token punctuation">-</span> <span class="token key atrule">http01</span><span class="token punctuation">:</span>
        <span class="token key atrule">ingress</span><span class="token punctuation">:</span>
          <span class="token key atrule">class</span><span class="token punctuation">:</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u8FD9\u91CC\u4F60\u9700\u8981\u5C06 <code>spec.acme.email</code> \u66FF\u6362\u4E3A\u4F60\u771F\u5B9E\u7684\u90AE\u7BB1\u5730\u5740\u3002\u7136\u540E\u8FD0\u884C kubectl apply \u63D0\u4EA4\u5230\u96C6\u7FA4\u5185\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>$ kubectl apply <span class="token punctuation">-</span>f cluster<span class="token punctuation">-</span>issuer.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5B89\u88C5\u548C\u914D\u7F6E-harbor" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u548C\u914D\u7F6E-harbor" aria-hidden="true">#</a> \u5B89\u88C5\u548C\u914D\u7F6E Harbor</h2><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u540C\u6837\u4F7F\u7528 Helm \u6765\u5B89\u88C5 Harbor\uFF0C\u9996\u5148\u6DFB\u52A0 Harbor \u5B98\u65B9\u4ED3\u5E93\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo <span class="token function">add</span> harbor https://helm.goharbor.io
$ helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u7531\u4E8E\u6211\u4EEC\u9700\u8981\u5B9A\u5236\u5316\u5B89\u88C5 Harbor\uFF0C\u6240\u4EE5\u9700\u8981\u4FEE\u6539 Harbor \u7684\u5B89\u88C5\u53C2\u6570\uFF0C\u5C06\u4E0B\u9762\u7684\u5185\u5BB9\u4FDD\u5B58\u4E3A <code>values.yaml</code>\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">expose</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> ingress
  <span class="token key atrule">tls</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">certSource</span><span class="token punctuation">:</span> secret
    <span class="token key atrule">secret</span><span class="token punctuation">:</span>
      <span class="token key atrule">secretName</span><span class="token punctuation">:</span> <span class="token string">&quot;harbor-secret-tls&quot;</span>
      <span class="token key atrule">notarySecretName</span><span class="token punctuation">:</span> <span class="token string">&quot;notary-secret-tls&quot;</span>
  <span class="token key atrule">ingress</span><span class="token punctuation">:</span>
    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>
      <span class="token key atrule">core</span><span class="token punctuation">:</span> harbor.openim.io
      <span class="token key atrule">notary</span><span class="token punctuation">:</span> notary.openim.io
    <span class="token key atrule">className</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
      <span class="token key atrule">kubernetes.io/tls-acme</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span>
<span class="token key atrule">persistence</span><span class="token punctuation">:</span>
  <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>
    <span class="token key atrule">registry</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 20Gi
    <span class="token key atrule">chartmuseum</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
    <span class="token key atrule">jobservice</span><span class="token punctuation">:</span>
      <span class="token key atrule">jobLog</span><span class="token punctuation">:</span>
        <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
      <span class="token key atrule">scanDataExports</span><span class="token punctuation">:</span>
        <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
    <span class="token key atrule">database</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
    <span class="token key atrule">redis</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
    <span class="token key atrule">trivy</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u6211\u8FD8\u4E3A Harbor \u914D\u7F6E\u4E86 ingress \u8BBF\u95EE\u57DF\u540D\uFF0C\u5206\u522B\u662F <code>harbor.openim.io</code> \u548C <code>notary.openim.io</code>\uFF0C\u4F60\u9700\u8981\u5C06\u5B83\u4EEC\u5206\u522B\u66FF\u6362\u6210\u4F60\u7684\u771F\u5B9E\u57DF\u540D\u3002</p><p>\u7136\u540E\uFF0C\u518D\u901A\u8FC7 helm install \u547D\u4EE4\u6765\u5B89\u88C5 Harbor\uFF0C\u5E76\u6307\u5B9A\u53C2\u6570\u914D\u7F6E\u6587\u4EF6 values.yaml\u3002</p><blockquote><p><strong>Note</strong></p><p>\u5982\u679C OpenIM \u96C6\u7FA4\u90E8\u7F72\u7684 \u547D\u540D\u7A7A\u95F4 \u662F <code>openim</code>\uFF0C \u90A3\u4E48\u9700\u8981\u4F7F\u7528 <code>-n</code> \u6307\u5B9A\u547D\u540D\u7A7A\u95F4\u3002\u5982\u679C\u547D\u540D\u7A7A\u95F4\u4E0D\u5B58\u5728\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528 <code>--create-namespace</code> chaun&#39;jian</p></blockquote><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>$ helm install harbor harbor/harbor <span class="token punctuation">-</span>f values.yaml <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace harbor <span class="token punctuation">-</span><span class="token punctuation">-</span>create<span class="token punctuation">-</span>namespace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7B49\u5F85\u6240\u6709 Pod \u5904\u4E8E\u5C31\u7EEA\u72B6\u6001\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>$ kubectl wait <span class="token punctuation">-</span><span class="token punctuation">-</span>for=condition=Ready pods <span class="token punctuation">-</span><span class="token punctuation">-</span>all <span class="token punctuation">-</span>n harbor <span class="token punctuation">-</span><span class="token punctuation">-</span>timeout 600s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5230\u8FD9\u91CC\uFF0CHarbor \u5C31\u5DF2\u7ECF\u5B89\u88C5\u5B8C\u6210\u4E86\u3002</p><h3 id="\u914D\u7F6E-dns-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E-dns-\u89E3\u6790" aria-hidden="true">#</a> \u914D\u7F6E DNS \u89E3\u6790</h3><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u4E3A\u57DF\u540D\u914D\u7F6E DNS \u89E3\u6790\u3002\u9996\u5148\uFF0C\u83B7\u53D6 Ingress-Nginx Loadbalancer \u7684\u5916\u7F51 IP\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>$ kubectl get services <span class="token punctuation">-</span><span class="token punctuation">-</span>namespace ingress<span class="token punctuation">-</span>nginx ingress<span class="token punctuation">-</span>nginx<span class="token punctuation">-</span>controller <span class="token punctuation">-</span><span class="token punctuation">-</span>output jsonpath=&#39;<span class="token punctuation">{</span>.status.loadBalancer.ingress<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>.ip<span class="token punctuation">}</span>&#39;
43.134.63.160
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u4E3A\u57DF\u540D\u914D\u7F6E DNS \u89E3\u6790\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u9700\u8981\u5206\u522B\u4E3A <code>harbor.openim.io</code> \u548C <code>notary.openim.io</code> \u914D\u7F6E A \u8BB0\u5F55\uFF0C\u5E76\u6307\u5411 <code>43.134.63.160</code>\u3002</p><h2 id="\u8BBF\u95EE-harbor-dashboard" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE-harbor-dashboard" aria-hidden="true">#</a> \u8BBF\u95EE Harbor Dashboard</h2><p>\u5728\u8BBF\u95EE Harbor Dashboard \u4E4B\u524D\uFF0C\u9996\u5148\u6211\u4EEC\u8981\u786E\u8BA4 Cert-manager \u662F\u5426\u5DF2\u7ECF\u6210\u529F\u7B7E\u53D1\u4E86 HTTPS \u8BC1\u4E66\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7 kubectl get certificate \u547D\u4EE4\u6765\u786E\u8BA4\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl get certificate <span class="token parameter variable">-A</span>                     
NAMESPACE   NAME                READY   SECRET              AGE
harbor      harbor-secret-tls   True    harbor-secret-tls   8s
harbor      notary-secret-tls   True    notary-secret-tls   8s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6211\u4EEC\u5728\u90E8\u7F72 Harbor \u7684\u65F6\u5019\u9700\u8981\u914D\u7F6E\u4E24\u4E2A\u57DF\u540D\uFF0C\u6240\u4EE5\u8FD9\u91CC\u4F1A\u51FA\u73B0\u4E24\u4E2A\u8BC1\u4E66\u3002\u5F53\u8FD9\u4E24\u4E2A\u8BC1\u4E66\u7684 Ready \u72B6\u6001\u90FD\u4E3A True \u65F6\uFF0C\u8BF4\u660E HTTPS \u8BC1\u4E66\u5DF2\u7ECF\u7B7E\u53D1\u6210\u529F\u4E86\u3002\u6B64\u5916\uFF0CCert-manager \u81EA\u52A8\u4ECE Ingress \u5BF9\u8C61\u4E2D\u8BFB\u53D6\u4E86 tls \u914D\u7F6E\uFF0C\u8FD8\u81EA\u52A8\u521B\u5EFA\u4E86\u540D\u4E3A harbor-secret-tls \u548C notary-secret-tls \u4E24\u4E2A\u5305\u542B\u8BC1\u4E66\u4FE1\u606F\u7684 Secret\u3002</p>`,42),x=s("\u63A5\u4E0B\u6765\uFF0C\u6253\u5F00 "),_={href:"https://harbor.openim.io",target:"_blank",rel:"noopener noreferrer"},H=s("https://harbor.openim.io"),S=s(" \u8FDB\u5165 Harbor Dashboard\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u8D26\u53F7 admin \u548C Harbor12345 \u5373\u53EF\u767B\u5F55\u63A7\u5236\u53F0\u3002"),C=i(`<h2 id="\u63A8\u9001\u955C\u50CF\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u63A8\u9001\u955C\u50CF\u6D4B\u8BD5" aria-hidden="true">#</a> \u63A8\u9001\u955C\u50CF\u6D4B\u8BD5</h2><p>\u73B0\u5728\uFF0C\u8BA9\u6211\u4EEC\u6765\u5C1D\u8BD5\u5C06\u672C\u5730\u7684\u955C\u50CF\u63A8\u9001\u5230 Harbor \u4ED3\u5E93\u3002\u9996\u5148\uFF0C\u5728\u672C\u5730\u62C9\u53D6 busybox \u955C\u50CF\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull busybox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u8FD0\u884C docker login \u547D\u4EE4\u767B\u5F55\u5230 Harbor \u4ED3\u5E93\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u7684\u8D26\u53F7\u5BC6\u7801\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> login harbor.openim.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u91CD\u65B0\u7ED9 busybox \u955C\u50CF\u6253\u6807\u7B7E\uFF0C\u6307\u5411 Harbor \u955C\u50CF\u4ED3\u5E93\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> tag busybox:latest harbor.openim.io/library/busybox:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u548C\u63A8\u9001\u5230 Docker Hub \u7684 Tag \u76F8\u6BD4\uFF0C\u63A8\u9001\u5230 Harbor \u9700\u8981\u6307\u5B9A\u5B8C\u6574\u7684\u955C\u50CF\u4ED3\u5E93\u5730\u5740\u3001\u9879\u76EE\u540D\u548C\u955C\u50CF\u540D\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4F7F\u7528\u4E86\u9ED8\u8BA4\u7684 library \u9879\u76EE\uFF0C\u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u65B0\u5EFA\u4E00\u4E2A\u9879\u76EE\uFF0C\u5E76\u5C06 library \u66FF\u6362\u4E3A\u65B0\u7684\u9879\u76EE\u540D\u3002</p><p>\u6700\u540E\uFF0C\u5C06\u955C\u50CF\u63A8\u9001\u5230\u4ED3\u5E93\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>$ docker push harbor.openim.io/library/busybox<span class="token punctuation">:</span>latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u955C\u50CF\u63A8\u9001\u6210\u529F\u540E\uFF0C\u8BBF\u95EE Harbor \u63A7\u5236\u53F0\uFF0C\u8FDB\u5165 library \u9879\u76EE\u8BE6\u60C5\uFF0C\u4F60\u5C06\u770B\u5230\u6211\u4EEC\u521A\u624D\u63A8\u9001\u7684\u955C\u50CF\u3002</p><p>\u5230\u8FD9\u91CC\uFF0CHarbor \u955C\u50CF\u4ED3\u5E93\u5C31\u5DF2\u7ECF\u914D\u7F6E\u597D\u4E86\u3002</p><h2 id="\u63A8\u8350\u4F7F\u7528-s3-\u5B58\u50A8\u955C\u50CF" tabindex="-1"><a class="header-anchor" href="#\u63A8\u8350\u4F7F\u7528-s3-\u5B58\u50A8\u955C\u50CF" aria-hidden="true">#</a> \u63A8\u8350\u4F7F\u7528 S3 \u5B58\u50A8\u955C\u50CF</h2><p>\u9664\u4E86\u4F7F\u7528\u6301\u4E45\u5377\u6765\u5B58\u50A8\u955C\u50CF\u4EE5\u5916\uFF0CHarbor \u8FD8\u652F\u6301\u5916\u90E8\u5B58\u50A8\u3002\u5982\u679C\u4F60\u5E0C\u671B\u5927\u89C4\u6A21\u4F7F\u7528 Harbor \u53C8\u4E0D\u60F3\u5173\u6CE8\u5B58\u50A8\u95EE\u9898\uFF0C\u90A3\u4E48\u4F7F\u7528\u5916\u90E8\u5B58\u50A8\u662F\u4E00\u4E2A\u975E\u5E38\u7684\u9009\u62E9\u3002\u4F8B\u5982\u4F7F\u7528 AWS S3 \u5B58\u50A8\u6876\u6765\u5B58\u50A8\u955C\u50CF\u3002</p><p>S3 \u5B58\u50A8\u65B9\u6848\u7684\u4F18\u52BF\u662F\uFF0C\u5B83\u80FD\u4E3A\u6211\u4EEC\u63D0\u4F9B\u63A5\u8FD1\u65E0\u9650\u5B58\u50A8\u5BB9\u91CF\u7684\u5B58\u50A8\u7CFB\u7EDF\uFF0C\u5E76\u4E14\u6309\u91CF\u8BA1\u8D39\u7684\u65B9\u5F0F\u6210\u672C\u4E5F\u76F8\u5BF9\u53EF\u63A7\uFF0C\u540C\u65F6\u5B83\u8FD8\u5177\u5907\u9AD8\u53EF\u7528\u6027\u548C\u5BB9\u707E\u80FD\u529B\u3002</p><p>\u8981\u4F7F\u7528 S3 \u6765\u5B58\u50A8\u955C\u50CF\uFF0C\u4F60\u9700\u8981\u5728\u5B89\u88C5\u65F6\u4FEE\u6539 Harbor \u7684\u5B89\u88C5\u914D\u7F6E values.yaml\u3002</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">expose</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> ingress
  <span class="token key atrule">tls</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">certSource</span><span class="token punctuation">:</span> secret
    <span class="token key atrule">secret</span><span class="token punctuation">:</span>
      <span class="token key atrule">secretName</span><span class="token punctuation">:</span> <span class="token string">&quot;harbor-secret-tls&quot;</span>
      <span class="token key atrule">notarySecretName</span><span class="token punctuation">:</span> <span class="token string">&quot;notary-secret-tls&quot;</span>
  <span class="token key atrule">ingress</span><span class="token punctuation">:</span>
    <span class="token key atrule">hosts</span><span class="token punctuation">:</span>
      <span class="token key atrule">core</span><span class="token punctuation">:</span> harbor.openim.io
      <span class="token key atrule">notary</span><span class="token punctuation">:</span> notary.openim.io
    <span class="token key atrule">className</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">annotations</span><span class="token punctuation">:</span>
      <span class="token key atrule">kubernetes.io/tls-acme</span><span class="token punctuation">:</span> <span class="token string">&quot;true&quot;</span>
<span class="token key atrule">persistence</span><span class="token punctuation">:</span>
  <span class="token key atrule">imageChartStorage</span><span class="token punctuation">:</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> s3
    <span class="token key atrule">s3</span><span class="token punctuation">:</span>
      <span class="token key atrule">region</span><span class="token punctuation">:</span> us<span class="token punctuation">-</span>west<span class="token punctuation">-</span><span class="token number">1</span>
      <span class="token key atrule">bucket</span><span class="token punctuation">:</span> bucketname
      <span class="token key atrule">accesskey</span><span class="token punctuation">:</span> AWS_ACCESS_KEY_ID
      <span class="token key atrule">secretkey</span><span class="token punctuation">:</span> AWS_SECRET_ACCESS_KEY
      <span class="token key atrule">rootdirectory</span><span class="token punctuation">:</span> /harbor
  <span class="token key atrule">persistentVolumeClaim</span><span class="token punctuation">:</span>
    <span class="token key atrule">chartmuseum</span><span class="token punctuation">:</span>
      <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
    <span class="token key atrule">jobservice</span><span class="token punctuation">:</span>
      <span class="token key atrule">jobLog</span><span class="token punctuation">:</span>
        <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
      <span class="token key atrule">scanDataExports</span><span class="token punctuation">:</span>
        <span class="token key atrule">size</span><span class="token punctuation">:</span> 10Gi
     <span class="token punctuation">...</span><span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u8981\u5C06 S3 \u76F8\u5173\u914D\u7F6E region\u3001bucket\u3001accesskey\u3001secretkey \u548C rootdirectory \u5B57\u6BB5\u4FEE\u6539\u4E3A\u5B9E\u9645\u7684\u503C\u3002\u7136\u540E\uFF0C\u518D\u4F7F\u7528 <code>helm install -f values.yaml</code> \u6765\u5B89\u88C5\u3002</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><p>OpenIM provides various public image registry addresses, such as aliyun, github, Docker Hub, and more.</p><p>Read https://github.com/openimsdk/open-im-server/blob/main/docs/conversions/images.md for more image building guidelines.</p><p>Most enterprises choose to set up their own image repository using Harbor, integrating it into their CI/CD pipeline to eventually replace Docker Hub and further reduce image storage costs.</p><p>Additionally, in a production environment, Harbor generally enables TLS, so you will also need to prepare a valid domain name.</p><blockquote><p>Chinese servers use domain names and require domain registration.</p></blockquote><h2 id="install-helm" tabindex="-1"><a class="header-anchor" href="#install-helm" aria-hidden="true">#</a> Install Helm</h2><p>Helm, along with cluster deployment references, can be found at https://github.com/openimsdk/open-im-server/tree/main/deployments.</p><h2 id="install-cert-manager" tabindex="-1"><a class="header-anchor" href="#install-cert-manager" aria-hidden="true">#</a> Install Cert-manager</h2><p>Next, let&#39;s install Cert-manager, which will automatically issue free Let&#39;s Encrypt HTTPS certificates for us and renew them before they expire.</p><p>First, run the following command to add the official Helm repository:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo <span class="token function">add</span> jetstack https://charts.jetstack.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then, update the local cache:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Next, run the following command to install Cert-manager:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm <span class="token function">install</span> cert-manager jetstack/cert-manager <span class="token punctuation">\\</span>
<span class="token parameter variable">--namespace</span> cert-manager <span class="token punctuation">\\</span>
--create-namespace <span class="token punctuation">\\</span>
<span class="token parameter variable">--version</span> v1.10.0 <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerName</span><span class="token operator">=</span>letsencrypt-prod <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerKind</span><span class="token operator">=</span>ClusterIssuer <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">ingressShim.defaultIssuerGroup</span><span class="token operator">=</span>cert-manager.io <span class="token punctuation">\\</span>
<span class="token parameter variable">--set</span> <span class="token assign-left variable">installCRDs</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Additionally, you need to create a ClusterIssuer for Cert-manager to provide the signing authority. Save the following content as <code>cluster-issuer.yaml</code>:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> cert<span class="token punctuation">-</span>manager.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterIssuer
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> letsencrypt<span class="token punctuation">-</span>prod
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">acme</span><span class="token punctuation">:</span>
    <span class="token key atrule">server</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//acme<span class="token punctuation">-</span>v02.api.letsencrypt.org/directory
    <span class="token key atrule">email</span><span class="token punctuation">:</span> <span class="token string">&quot;your-email@example.com&quot;</span>
    <span class="token key atrule">privateKeySecretRef</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> letsencrypt<span class="token punctuation">-</span>prod
    <span class="token key atrule">solvers</span><span class="token punctuation">:</span>    
    <span class="token punctuation">-</span> <span class="token key atrule">http01</span><span class="token punctuation">:</span>
        <span class="token key atrule">ingress</span><span class="token punctuation">:</span>
          <span class="token key atrule">class</span><span class="token punctuation">:</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Please replace <code>spec.acme.email</code> with your actual email address, and then apply it to the cluster:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl apply <span class="token parameter variable">-f</span> cluster-issuer.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="install-and-configure-harbor" tabindex="-1"><a class="header-anchor" href="#install-and-configure-harbor" aria-hidden="true">#</a> Install and Configure Harbor</h2><p>Now, we&#39;ll also use Helm to install Harbor. First, add the official Harbor repository:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm repo <span class="token function">add</span> harbor https://helm.goharbor.io
$ helm repo update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Next, since we need to customize the installation of Harbor, you&#39;ll need to modify Harbor&#39;s installation parameters. Save the following content as <code>values.yaml</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>expose:
  type: ingress
  tls:
    enabled: <span class="token boolean">true</span>
    certSource: secret
    secret:
      secretName: <span class="token string">&quot;harbor-secret-tls&quot;</span>
      notarySecretName: <span class="token string">&quot;notary-secret-tls&quot;</span>
  ingress:
    hosts:
      core: harbor.openim.io
      notary: notary.openim.io
    className: nginx
    annotations:
      kubernetes.io/tls-acme: <span class="token string">&quot;true&quot;</span>
persistence:
  persistentVolumeClaim:
    registry:
      size: 20Gi
    chartmuseum:
      size: 10Gi
    jobservice:
      jobLog:
        size: 10Gi
      scanDataExports:
        size: 10Gi
    database:
      size: 10Gi
    redis:
      size: 10Gi
    trivy:
      size: 10Gi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Additionally, I&#39;ve configured ingress access domains for Harbor as <code>harbor.openim.io</code> and <code>notary.openim.io</code>. You need to replace them with your actual domain names.</p><p>Then, install Harbor using the following <code>helm install</code> command, specifying the configuration file <code>values.yaml</code>:</p><blockquote><p><strong>Note</strong>: If the OpenIM cluster is deployed in a namespace other than <code>openim</code>, you need to use <code>-n</code> to specify the namespace. If the namespace does not exist, you can use <code>--create-namespace</code>.</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm <span class="token function">install</span> harbor harbor/harbor <span class="token parameter variable">-f</span> values.yaml <span class="token parameter variable">--namespace</span> harbor --create-namespace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Wait for all pods to be in a ready state:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl <span class="token function">wait</span> <span class="token parameter variable">--for</span><span class="token operator">=</span>condition<span class="token operator">=</span>Ready pods <span class="token parameter variable">--all</span> <span class="token parameter variable">-n</span> harbor <span class="token parameter variable">--timeout</span> 600s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>At this point, Harbor has been successfully installed.</p><h3 id="configure-dns-resolution" tabindex="-1"><a class="header-anchor" href="#configure-dns-resolution" aria-hidden="true">#</a> Configure DNS Resolution</h3><p>Next, configure DNS resolution for your domain name. First, get the external IP of the Ingress-Nginx LoadBalancer:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl get services <span class="token parameter variable">--namespace</span> ingress-nginx ingress-nginx-controller <span class="token parameter variable">--output</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&#39;{.status.loadBalancer.ingress[0].ip}&#39;</span>
<span class="token number">43.134</span>.63.160
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then, configure DNS resolution for your domain names. In this example, I need to configure A records for <code>harbor.openim.io</code> and <code>notary.openim.io</code> and point them to <code>43.134.63.160</code>.</p><h2 id="access-harbor-dashboard" tabindex="-1"><a class="header-anchor" href="#access-harbor-dashboard" aria-hidden="true">#</a> Access Harbor Dashboard</h2><p>Before accessing the Harbor Dashboard, first confirm whether Cert-manager has successfully issued the HTTPS certificate. You can use the <code>kubectl get certificate</code> command to check:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ kubectl get certificate <span class="token parameter variable">-A</span>                     
NAMESPACE   NAME                READY   SECRET              AGE
harbor      harbor-secret-tls   True    harbor-secret-tls   8s
harbor      notary-secret-tls   True    notary-secret-tls   8s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Since we configured two domains when deploying Harbor, you will see two certificates here. When both certificates have a <code>Ready</code> status of <code>True</code>, it means that the HTTPS certificates have been successfully issued. Additionally, Cert-manager automatically reads the tls configuration from the Ingress object and creates two secrets, <code>harbor-secret-tls</code> and <code>notary-secret-tls</code>, containing certificate information.</p>`,58),w=s("Next, open "),q={href:"https://harbor.openim.io/",target:"_blank",rel:"noopener noreferrer"},E=s("https://harbor.openim.io"),I=s(" to access the Harbor Dashboard. You can log in to the console using the default account "),N=e("code",null,"admin",-1),A=s(" and password "),T=e("code",null,"Harbor12345",-1),D=s("."),$=i(`<h2 id="test-image-push" tabindex="-1"><a class="header-anchor" href="#test-image-push" aria-hidden="true">#</a> Test Image Push</h2><p>Now, let&#39;s try pushing a local image to the Harbor repository. First, pull the busybox image locally:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull busybox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then, run the <code>docker login</code> command to log in to the Harbor repository using the default credentials:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> login harbor.openim.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Next, re-tag the busybox image to point to the Harbor image repository:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> tag busybox:latest harbor.openim.io/library/busybox:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Compared to pushing to Docker Hub, pushing to Harbor requires specifying the full image repository address, project name, and image name. Here, I used the default <code>library</code> project, but you can create a new project and replace <code>library</code> with the new project name.</p><p>Finally, push the image to the repository:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker</span> push harbor.openim.io/library/busybox:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After successfully pushing the image, visit the Harbor console, go to the <code>library</code> project details, and you will see theimage that we just pushed.</p><p>At this point, your Harbor image repository is configured and operational.</p><h2 id="recommended-use-s3-storage-for-images" tabindex="-1"><a class="header-anchor" href="#recommended-use-s3-storage-for-images" aria-hidden="true">#</a> Recommended: Use S3 Storage for Images</h2><p>In addition to using persistent volumes for image storage, Harbor also supports external storage. If you want to use Harbor extensively and don&#39;t want to worry about storage, using external storage is an excellent choice. For example, you can use an AWS S3 bucket to store images.</p><p>The advantages of an S3 storage solution include near-infinite storage capacity, cost control with pay-as-you-go billing, high availability, and disaster recovery capabilities.</p><p>To use S3 for image storage, you need to modify the Harbor installation configuration in <code>values.yaml</code> during installation:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>expose:
  type: ingress
  tls:
    enabled: <span class="token boolean">true</span>
    certSource: secret
    secret:
      secretName: <span class="token string">&quot;harbor-secret-tls&quot;</span>
      notarySecretName: <span class="token string">&quot;notary-secret-tls&quot;</span>
  ingress:
    hosts:
      core: harbor.openim.io
      notary: notary.openim.io
    className: nginx
    annotations:
      kubernetes.io/tls-acme: <span class="token string">&quot;true&quot;</span>
persistence:
  imageChartStorage:
    type: s3
    s3:
      region: us-west-1
      bucket: bucketname
      accesskey: AWS_ACCESS_KEY_ID
      secretkey: AWS_SECRET_ACCESS_KEY
      rootdirectory: /harbor
  persistentVolumeClaim:
    chartmuseum:
      size: 10Gi
    jobservice:
      jobLog:
        size: 10Gi
      scanDataExports:
        size: 10Gi
     <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Make sure to replace the S3 configuration fields (<code>region</code>, <code>bucket</code>, <code>accesskey</code>, <code>secretkey</code>, and <code>rootdirectory</code>) with your actual values. Then, install Harbor using <code>helm install</code> with the <code>-f values.yaml</code> option.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ helm <span class="token function">install</span> harbor harbor/harbor <span class="token parameter variable">-f</span> values.yaml <span class="token parameter variable">--namespace</span> harbor --create-namespace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>With this configuration, Harbor will use S3 storage for images.</p><p>Congratulations! You have now completed the installation and configuration of Harbor, and you have the option to use S3 storage for your images if desired. Your Docker images can be securely stored and managed in your own Harbor image repository.</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="78.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} </a><a href="80.md" style="float:right;"> \uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,23),j=s("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),G={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},z=e("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),R=s(")"),L=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),P={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},M=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function Y(V,W){const a=t("ExternalLinkIcon"),l=t("RouterLink");return o(),c("div",null,[e("ul",null,[e("li",null,[e("a",u,[m,n(a)])])]),v,b,h,e("blockquote",null,[e("p",null,[k,e("a",g,[y,n(a)])])]),f,e("p",null,[x,e("a",_,[H,n(a)]),S]),C,e("p",null,[w,e("a",q,[E,n(a)]),I,N,A,T,D]),$,e("ul",null,[e("li",null,[e("p",null,[n(l,{to:"/"},{default:p(()=>[j]),_:1})])]),e("li",null,[e("p",null,[e("a",G,[z,n(a)]),R])]),e("li",null,[e("p",null,[L,e("a",P,[M,n(a)])])])])])}const K=r(d,[["render",Y],["__file","79.html.vue"]]);export{K as default};

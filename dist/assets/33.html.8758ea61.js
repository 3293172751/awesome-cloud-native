import{_ as c,r as e,o as i,c as l,a as n,b as a,w as u,e as s,d as p}from"./app.5bf1abd2.js";const r={},d={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},k=s("author"),m=n("h1",{id:"\u7B2C33\u8282-postman\u8BF7\u6C42server",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C33\u8282-postman\u8BF7\u6C42server","aria-hidden":"true"},"#"),s(" \u7B2C33\u8282 Postman\u8BF7\u6C42Server")],-1),v=n("div",null,[n("a",{href:"32.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),n("a",{href:"34.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),b=n("br",null,null,-1),g=s("\u2764\uFE0F\u{1F495}\u{1F495}\u65B0\u65F6\u4EE3\u62E5\u62B1\u4E91\u539F\u751F\uFF0C\u4E91\u539F\u751F\u5177\u6709\u73AF\u5883\u7EDF\u4E00\u3001\u6309\u9700\u4ED8\u8D39\u3001\u5373\u5F00\u5373\u7528\u3001\u7A33\u5B9A\u6027\u5F3A\u7279\u70B9\u3002Myblog:"),h={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},f=s("http://nsddd.top"),_=p(`<hr><p>[TOC]</p><h2 id="\u9700\u8981" tabindex="-1"><a class="header-anchor" href="#\u9700\u8981" aria-hidden="true">#</a> \u9700\u8981</h2><p><strong>\u56E0\u4E3A\u6211\u4EEC\u4E00\u822C debug \u6211\u4EEC\u7684\u4EE3\u7801\uFF0C\u90A3\u4E48\u9700\u8981\u8FD9\u4E2A\u4EE3\u7801\u88AB\u89E6\u53D1\u6389\u3002kubernetes \u7684Informer \u4F1A\u5BFC\u81F4\u8BB8\u8BB8\u591A\u591A\u7684\u5BA2\u6237\u7AEF\u90FD\u6709\u672C\u5730\u7684\u7F13\u5B58\u3002</strong></p><p>Informer \u5185\u90E8\u5B9E\u73B0\u6781\u5176\u590D\u6742\uFF0C\u6240\u4EE5\u5F88\u5C11\u6709\u76F8\u5173\u7684\u6587\u7AE0\uFF0C\u5982\u679C\u9700\u8981\u8BF7\u8C37\u6B4C\u641C\u7D22\u5916\u6587\u3002</p><p>Informer \u662F Client-go \u4E2D\u7684\u4E00\u4E2A\u6838\u5FC3\u5DE5\u5177\u5305\u3002\u5728 Kubernetes \u6E90\u7801\u4E2D\uFF0C\u5982\u679C Kubernetes \u7684\u67D0\u4E2A\u7EC4\u4EF6\uFF0C\u9700\u8981 List/Get Kubernetes \u4E2D\u7684 Object\uFF0C\u5728\u7EDD\u5927\u591A \u6570\u60C5\u51B5\u4E0B\uFF0C\u4F1A\u76F4\u63A5\u4F7F\u7528 Informer \u5B9E\u4F8B\u4E2D\u7684 Lister()\u65B9\u6CD5\uFF08\u8BE5\u65B9\u6CD5\u5305\u542B \u4E86 Get \u548C List \u65B9\u6CD5\uFF09\uFF0C\u800C\u5F88\u5C11\u76F4\u63A5\u8BF7\u6C42 Kubernetes API\u3002Informer \u6700\u57FA\u672C \u7684\u529F\u80FD\u5C31\u662F List/Get Kubernetes \u4E2D\u7684 Object\u3002</p><h2 id="api-server-\u5728-cobra-\u4E0B\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#api-server-\u5728-cobra-\u4E0B\u7684\u5B9E\u73B0" aria-hidden="true">#</a> API Server \u5728 Cobra \u4E0B\u7684\u5B9E\u73B0</h2><p><code>api-server.go</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token boolean">_</span> <span class="token string">&quot;time/tzdata&quot;</span> <span class="token comment">// for timeZone support in CronJob</span>

	<span class="token string">&quot;k8s.io/component-base/cli&quot;</span>
	<span class="token boolean">_</span> <span class="token string">&quot;k8s.io/component-base/logs/json/register&quot;</span>          <span class="token comment">// for JSON log format registration</span>
	<span class="token boolean">_</span> <span class="token string">&quot;k8s.io/component-base/metrics/prometheus/clientgo&quot;</span> <span class="token comment">// load all the prometheus client-go plugins</span>
	<span class="token boolean">_</span> <span class="token string">&quot;k8s.io/component-base/metrics/prometheus/version&quot;</span>  <span class="token comment">// for version metric registration</span>
	<span class="token string">&quot;k8s.io/kubernetes/cmd/kube-apiserver/app&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	command <span class="token operator">:=</span> app<span class="token punctuation">.</span><span class="token function">NewAPIServerCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	code <span class="token operator">:=</span> cli<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>
	os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5F88\u7B80\u5355\u7684\u4E00\u4E2A\u51FD\u6570\uFF0C\u8C03\u7528 command \u65B9\u6CD5\u4E00\u76F4\u8DD1\u5C31\u5BF9\u4E86\uFF0CRun \u65B9\u6CD5\u662F\u4E2A\u5FAA\u73AF\uFF0C\u76F4\u5230\u4F60\u9000\u51FA API Server\uFF0Ccode \u4EA4\u7ED9 os.Exit\u3002</p></div><p><strong>\u8F6C\u5230 \u5B9A\u4E49\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// NewAPIServerCommand creates a *cobra.Command object with default parameters</span>
<span class="token keyword">func</span> <span class="token function">NewAPIServerCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> options<span class="token punctuation">.</span><span class="token function">NewServerRunOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	cmd <span class="token operator">:=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">{</span>
		Use<span class="token punctuation">:</span> <span class="token string">&quot;kube-apiserver&quot;</span><span class="token punctuation">,</span>
		Long<span class="token punctuation">:</span> <span class="token string">\`The Kubernetes API server validates and configures data
for the api objects which include pods, services, replicationcontrollers, and
others. The API Server services REST operations and provides the frontend to the
cluster&#39;s shared state through which all other components interact.\`</span><span class="token punctuation">,</span>

		<span class="token comment">// stop printing usage when the command errors</span>
		SilenceUsage<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		PersistentPreRunE<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
			<span class="token comment">// silence client-go warnings.</span>
			<span class="token comment">// kube-apiserver loopback clients should not log self-issued warnings.</span>
			rest<span class="token punctuation">.</span><span class="token function">SetDefaultWarningHandler</span><span class="token punctuation">(</span>rest<span class="token punctuation">.</span>NoWarnings<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		RunE<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
			verflag<span class="token punctuation">.</span><span class="token function">PrintAndExitIfRequested</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			fs <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

			<span class="token comment">// Activate logging as soon as possible, after that</span>
			<span class="token comment">// show flags with the final logging configuration.</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> logsapi<span class="token punctuation">.</span><span class="token function">ValidateAndApply</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>Logs<span class="token punctuation">,</span> utilfeature<span class="token punctuation">.</span>DefaultFeatureGate<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>
			cliflag<span class="token punctuation">.</span><span class="token function">PrintFlags</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span>

			<span class="token comment">// set default options</span>
			completedOptions<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">Complete</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>

			<span class="token comment">// validate options</span>
			<span class="token keyword">if</span> errs <span class="token operator">:=</span> completedOptions<span class="token punctuation">.</span><span class="token function">Validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">len</span><span class="token punctuation">(</span>errs<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> utilerrors<span class="token punctuation">.</span><span class="token function">NewAggregate</span><span class="token punctuation">(</span>errs<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// add feature enablement metrics</span>
			utilfeature<span class="token punctuation">.</span>DefaultMutableFeatureGate<span class="token punctuation">.</span><span class="token function">AddMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token function">Run</span><span class="token punctuation">(</span>completedOptions<span class="token punctuation">,</span> genericapiserver<span class="token punctuation">.</span><span class="token function">SetupSignalHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		Args<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> arg <span class="token operator">:=</span> <span class="token keyword">range</span> args <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;%q does not take any arguments, got %q&quot;</span><span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">CommandPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	fs <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	namedFlagSets <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	verflag<span class="token punctuation">.</span><span class="token function">AddFlags</span><span class="token punctuation">(</span>namedFlagSets<span class="token punctuation">.</span><span class="token function">FlagSet</span><span class="token punctuation">(</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	globalflag<span class="token punctuation">.</span><span class="token function">AddGlobalFlags</span><span class="token punctuation">(</span>namedFlagSets<span class="token punctuation">.</span><span class="token function">FlagSet</span><span class="token punctuation">(</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cmd<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logs<span class="token punctuation">.</span><span class="token function">SkipLoggingConfigurationFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	options<span class="token punctuation">.</span><span class="token function">AddCustomGlobalFlags</span><span class="token punctuation">(</span>namedFlagSets<span class="token punctuation">.</span><span class="token function">FlagSet</span><span class="token punctuation">(</span><span class="token string">&quot;generic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> f <span class="token operator">:=</span> <span class="token keyword">range</span> namedFlagSets<span class="token punctuation">.</span>FlagSets <span class="token punctuation">{</span>
		fs<span class="token punctuation">.</span><span class="token function">AddFlagSet</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	cols<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> term<span class="token punctuation">.</span><span class="token function">TerminalSize</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">OutOrStdout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	cliflag<span class="token punctuation">.</span><span class="token function">SetUsageAndHelpFunc</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> namedFlagSets<span class="token punctuation">,</span> cols<span class="token punctuation">)</span>

	<span class="token keyword">return</span> cmd
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>cri \u662F \u5982\u4F55 run command \u7684\uFF1A</strong></p>`,13),w={href:"https://github.com/kubernetes/component-base",target:"_blank",rel:"noopener noreferrer"},S=s("cri\u4ED3\u5E93"),y=p(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">run</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">)</span> <span class="token punctuation">(</span>logsInitialized <span class="token builtin">bool</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rand<span class="token punctuation">.</span><span class="token function">Seed</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> logs<span class="token punctuation">.</span><span class="token function">FlushLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	cmd<span class="token punctuation">.</span><span class="token function">SetGlobalNormalizationFunc</span><span class="token punctuation">(</span>cliflag<span class="token punctuation">.</span>WordSepNormalizeFunc<span class="token punctuation">)</span>

	<span class="token comment">// When error printing is enabled for the Cobra command, a flag parse</span>
	<span class="token comment">// error gets printed first, then optionally the often long usage</span>
	<span class="token comment">// text. This is very unreadable in a console because the last few</span>
	<span class="token comment">// lines that will be visible on screen don&#39;t include the error.</span>
	<span class="token comment">//</span>
	<span class="token comment">// The recommendation from #sig-cli was to print the usage text, then</span>
	<span class="token comment">// the error. We implement this consistently for all commands here.</span>
	<span class="token comment">// However, we don&#39;t want to print the usage text when command</span>
	<span class="token comment">// execution fails for other reasons than parsing. We detect this via</span>
	<span class="token comment">// the FlagParseError callback.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Some commands, like kubectl, already deal with this themselves.</span>
	<span class="token comment">// We don&#39;t change the behavior for those.</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>cmd<span class="token punctuation">.</span>SilenceUsage <span class="token punctuation">{</span>
		cmd<span class="token punctuation">.</span>SilenceUsage <span class="token operator">=</span> <span class="token boolean">true</span>
		cmd<span class="token punctuation">.</span><span class="token function">SetFlagErrorFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
			<span class="token comment">// Re-enable usage printing.</span>
			c<span class="token punctuation">.</span>SilenceUsage <span class="token operator">=</span> <span class="token boolean">false</span>
			<span class="token keyword">return</span> err
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// In all cases error printing is done below.</span>
	cmd<span class="token punctuation">.</span>SilenceErrors <span class="token operator">=</span> <span class="token boolean">true</span>

	<span class="token comment">// This is idempotent.</span>
	logs<span class="token punctuation">.</span><span class="token function">AddFlags</span><span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token function">PersistentFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// Inject logs.InitLogs after command line parsing into one of the</span>
	<span class="token comment">// PersistentPre* functions.</span>
	<span class="token keyword">switch</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> cmd<span class="token punctuation">.</span>PersistentPreRun <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">:</span>
		pre <span class="token operator">:=</span> cmd<span class="token punctuation">.</span>PersistentPreRun
		cmd<span class="token punctuation">.</span>PersistentPreRun <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logs<span class="token punctuation">.</span><span class="token function">InitLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			logsInitialized <span class="token operator">=</span> <span class="token boolean">true</span>
			<span class="token function">pre</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token keyword">case</span> cmd<span class="token punctuation">.</span>PersistentPreRunE <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">:</span>
		pre <span class="token operator">:=</span> cmd<span class="token punctuation">.</span>PersistentPreRunE
		cmd<span class="token punctuation">.</span>PersistentPreRunE <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
			logs<span class="token punctuation">.</span><span class="token function">InitLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			logsInitialized <span class="token operator">=</span> <span class="token boolean">true</span>
			<span class="token keyword">return</span> <span class="token function">pre</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token keyword">default</span><span class="token punctuation">:</span>
		cmd<span class="token punctuation">.</span>PersistentPreRun <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logs<span class="token punctuation">.</span><span class="token function">InitLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			logsInitialized <span class="token operator">=</span> <span class="token boolean">true</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	err <span class="token operator">=</span> cmd<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u86EE\u7B80\u5355\u7684\u8FC7\u7A0B\uFF0C\u8FDB\u884C run \u64CD\u4F5C\u6700\u540E\u8C03\u7528 <code>cmd.Execute()</code></p><h2 id="postman\u8BF7\u6C42-api-server" tabindex="-1"><a class="header-anchor" href="#postman\u8BF7\u6C42-api-server" aria-hidden="true">#</a> Postman\u8BF7\u6C42 APi Server</h2><p><strong>\u6700\u5927\u7684\u95EE\u9898\uFF1A\u5982\u4F55\u767B\u9646\u548C\u6388\u6743\u3002</strong></p><h2 id="\u5EFA\u7ACB-server-account" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB-server-account" aria-hidden="true">#</a> \u5EFA\u7ACB Server Account</h2><p>Server Account \u673A\u5236\u662F Kubernetes \u4E2D\u7EC4\u4EF6\u548C API Server \u4EA4\u4E92\u7684\u6807\u51C6\u65B9\u5F0F</p><h2 id="\u5EFA\u7ACB-secret-1-24" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB-secret-1-24" aria-hidden="true">#</a> \u5EFA\u7ACB Secret ( &gt;=1.24)</h2><p>\u51FA\u4E8E\u5B89\u5168\u8003\u8651\uFF0C1.24\u7248\u672C\u548C\u4EE5\u540E\u7248\u672C\uFF0C\u4E0D\u518D\u81EA\u52A8\u4E3A\u4E00\u4E2A Server Account \u521B\u5EFA Secret \uFF0C\u9700\u8981\u81EA\u5DF1\u624B\u52A8\u521B\u5EFA\u3002</p><h2 id="\u5EFA\u7ACB-clusterrole" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u7ACB-clusterrole" aria-hidden="true">#</a> \u5EFA\u7ACB ClusterRole</h2><p>\u4E3A SA \u6388\u6743\uFF0C\u80FD\u591F\u64CD\u4F5C API \u5BF9\u8C61</p><h2 id="\u83B7\u53D6-secret-\u4E2D\u7684\u8BC1\u4E66" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6-secret-\u4E2D\u7684\u8BC1\u4E66" aria-hidden="true">#</a> \u83B7\u53D6 Secret \u4E2D\u7684\u8BC1\u4E66</h2><p>Token \u5C06\u653E\u5728http Header \u4E2D\u53D1\u9001\u5230 API Server \u4ECE\u800C\u8FDB\u884C\u9274\u6743</p><h2 id="\u63D0\u53D6-secret-\u4E2D\u7684\u8BC1\u4E66" tabindex="-1"><a class="header-anchor" href="#\u63D0\u53D6-secret-\u4E2D\u7684\u8BC1\u4E66" aria-hidden="true">#</a> \u63D0\u53D6 Secret \u4E2D\u7684\u8BC1\u4E66</h2><p>\u4E3A\u4E86\u80FD\u548C API Server \u5EFA\u7ACB\u5B89\u5168\u8FDE\u63A5\uFF0CPostman\u9700\u8981 \u6539 SA \u5BF9\u5E94\u8BC1\u4E66</p><h2 id="\u4E0B\u8F7D\u8BC1\u4E66\u5E76\u4E14\u4E0A\u4F20\u5230-postman" tabindex="-1"><a class="header-anchor" href="#\u4E0B\u8F7D\u8BC1\u4E66\u5E76\u4E14\u4E0A\u4F20\u5230-postman" aria-hidden="true">#</a> \u4E0B\u8F7D\u8BC1\u4E66\u5E76\u4E14\u4E0A\u4F20\u5230 Postman</h2><p>\u628A\u4E0B\u8F7D\u597D\u7684\u8BC1\u4E66 \u4E0B\u8F7D\u5230 Postman \u6240\u5728\u673A\u5668\uFF0C\u5E76\u4E0A\u4F20\u5230 Postman \u8BBE\u7F6E\u4E2D</p><h2 id="\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE" aria-hidden="true">#</a> \u8BBF\u95EE</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>https://192.168.100.6443/apis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="32.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} </a><a href="34.md" style="float:right;"> \uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,20),P=s("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),A={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},x=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),C=s(")"),F=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),I={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},q=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function E(R,N){const t=e("ExternalLinkIcon"),o=e("RouterLink");return i(),l("div",null,[n("ul",null,[n("li",null,[n("a",d,[k,a(t)])])]),m,v,b,n("blockquote",null,[n("p",null,[g,n("a",h,[f,a(t)])])]),_,n("ul",null,[n("li",null,[n("a",w,[S,a(t)])])]),y,n("ul",null,[n("li",null,[n("p",null,[a(o,{to:"/"},{default:u(()=>[P]),_:1})])]),n("li",null,[n("p",null,[n("a",A,[x,a(t)]),C])]),n("li",null,[n("p",null,[F,n("a",I,[q,a(t)])])])])])}const O=c(r,[["render",E],["__file","33.html.vue"]]);export{O as default};

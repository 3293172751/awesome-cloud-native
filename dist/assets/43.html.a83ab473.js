import{_ as r,r as t,o as i,c as p,a as s,b as a,w as c,e,d as o}from"./app.e902a46c.js";const d={},u={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},h=e("author"),k=s("h1",{id:"\u7B2C43\u8282-k8sgpt-kubernetes-sre\u8D85\u80FD\u529B",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u7B2C43\u8282-k8sgpt-kubernetes-sre\u8D85\u80FD\u529B","aria-hidden":"true"},"#"),e(" \u7B2C43\u8282 k8sgpt Kubernetes SRE\u8D85\u80FD\u529B")],-1),b=s("div",null,[s("a",{href:"42.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),s("a",{href:"44.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),_=s("br",null,null,-1),v=e("\u2764\uFE0F\u{1F495}\u{1F495}\u8BB0\u5F55"),m={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},f=e("sealos"),g=e("\u5F00\u6E90\u9879\u76EE\u7684\u5B66\u4E60\u8FC7\u7A0B\u3002"),E={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},x=e("k8s,docker\u548C\u4E91\u539F\u751F\u7684\u5B66\u4E60"),C=e("\u3002Myblog:"),y={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},T=e("http://nsddd.top"),q=s("hr",null,null,-1),I=s("p",null,"[TOC]",-1),N=s("h2",{id:"\u524D\u8A00",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),e(" \u524D\u8A00")],-1),R=s("p",null,[s("code",null,"k8sgpt"),e("\u662F\u4E00\u4E2A\u7528\u7B80\u5355\u7684\u82F1\u8BED\u626B\u63CF"),s("code",null,"Kubernetes"),e("\u96C6\u7FA4\u3001\u8BCA\u65AD\u548C\u5206\u7C7B\u95EE\u9898\u7684\u5DE5\u5177\u3002")],-1),$=s("p",null,"\u5B83\u5C06SRE\u7ECF\u9A8C\u7F16\u5165\u5176\u5206\u6790\u7A0B\u5E8F\uFF0C\u5E76\u5E2E\u52A9\u63D0\u53D6\u6700\u76F8\u5173\u7684\u4FE1\u606F\uFF0C\u5E76\u7528\u4EBA\u5DE5\u667A\u80FD\u4E30\u5BCC\u5B83\u3002",-1),S={href:"https://github.com/k8sgpt-ai/k8sgpt/issues/305",target:"_blank",rel:"noopener noreferrer"},w=e("Issues \u5730\u5740 "),A=s("h2",{id:"\u63D0\u8BAE",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u63D0\u8BAE","aria-hidden":"true"},"#"),e(" \u63D0\u8BAE")],-1),B=s("p",null,"\u5F88\u9AD8\u5174\u80FD\u770B\u5230\u8FD9\u6837\u4E00\u4E2A\u5F88\u6709\u524D\u666F\uFF0C\u6709\u672A\u6765\uFF0C\u800C\u4E14\u5F88\u6D3B\u8DC3\u7684\u9879\u76EE\uFF0C\u5173\u952E\u662F k8sgpt \u6709\u7740 chatgpt \u7684\u8D85\u80FD\u529B\u3002",-1),M=s("p",null,"\u4F5C\u4E3A\u4E00\u4E2A Kubernetes \u7684\u7231\u597D\u8005\uFF0C\u4E5F\u662F\u6DF1\u6DF1\u7684\u88AB k8sgpt \u6240\u5438\u5F15\uFF0C\u4E8E\u662F\u6211\u628A\u4EE3\u7801\u62C9\u53D6\u5230\u672C\u5730\u51C6\u5907\u6DF1\u5165\u5B66\u4E60\u4E00\u4E0B k8sgpt\u3002",-1),D=s("p",null,"\u6211\u9047\u5230\u4E86\u4E00\u4E9B\u4E0D\u662F\u5F88\u53CB\u597D\u7684\u5730\u65B9\uFF1A",-1),O=o(`<li><p>makefile \u5E76\u6CA1\u6709\u63D0\u4F9B\u7F16\u8BD1\u548C\u6D4B\u8BD5\u7684\u529F\u80FD\uFF0C\u76EE\u524D\u5F88\u7B80\u5355\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u276F <span class="token function">cat</span> Makefile
.PHONY: docker-build
IMG ?<span class="token operator">=</span> ghcr.io/k8sgpt-ai/k8sgpt:latest

deploy:
ifndef SECRET
        <span class="token variable"><span class="token variable">$(</span>error SECRET environment variable is not <span class="token builtin class-name">set</span><span class="token variable">)</span></span>
endif
        kubectl create ns k8sgpt <span class="token operator">||</span> <span class="token boolean">true</span>
        kubectl create secret generic ai-backend-secret --from-literal<span class="token operator">=</span>secret-key<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>SECRET<span class="token variable">)</span></span> <span class="token parameter variable">--namespace</span><span class="token operator">=</span>k8sgpt <span class="token operator">||</span> <span class="token boolean">true</span>
        kubectl apply <span class="token parameter variable">-f</span> container/manifests
undeploy:
        kubectl delete secret ai-backend-secret <span class="token parameter variable">--namespace</span><span class="token operator">=</span>k8sgpt
        kubectl delete <span class="token parameter variable">-f</span> container/manifests
        kubectl delete ns k8sgpt
docker-build:
        <span class="token function">docker</span> buildx build --build-arg<span class="token operator">=</span>VERSION<span class="token operator">=</span><span class="token string">&quot;$<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> describe <span class="token parameter variable">--tags</span> <span class="token parameter variable">--abbrev</span><span class="token operator">=</span><span class="token number">0</span><span class="token variable">)</span></span>&quot;</span> --build-arg<span class="token operator">=</span>COMMIT<span class="token operator">=</span><span class="token string">&quot;$<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> rev-parse <span class="token parameter variable">--short</span> HEAD<span class="token variable">)</span></span>&quot;</span> --build-arg <span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token string">&quot;$<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%FT%TZ<span class="token variable">)</span></span>&quot;</span> <span class="token parameter variable">--platform</span><span class="token operator">=</span><span class="token string">&quot;linux/amd64,linux/arm64&quot;</span> <span class="token parameter variable">-t</span> <span class="token variable">\${IMG}</span> <span class="token parameter variable">-f</span> container/Dockerfile <span class="token builtin class-name">.</span> <span class="token parameter variable">--push</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),V=e("\u7F16\u8BD1\u540E\u5BF9 \u4E8C\u8FDB\u5236\u7684\u5904\u7406\u5E76\u4E0D\u662F\u5F88\u53CB\u597D\uFF0C\u5373\u4F7F\u5728 "),L={href:"https://github.com/k8sgpt-ai/k8sgpt/blob/main/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},G=e("contributing \u6587\u6863"),K=e(" \u4E2D\u544A\u8BC9\u6211\uFF1ABuilding the binary is as simple as running "),F=s("code",null,"go build .",-1),H=e(" in the root of the repository."),Y=o('<h2 id="\u5EFA\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u5EFA\u8BAE" aria-hidden="true">#</a> \u5EFA\u8BAE</h2><p>\u4F5C\u4E3A\u6211\u53C2\u4E0E k8sgpt \u7684\u7B2C\u4E00\u6B65\uFF0C\u60F3\u542C\u4E00\u542C\u5927\u5BB6\u7684\u5EFA\u8BAE\uFF0C\u6709\u4EC0\u4E48\u597D\u7684\u529F\u80FD\u548C\u63D0\u8BAE~</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="42.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} </a><a href="44.md" style="float:right;"> \uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>',4),z=e("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),P={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},U=s("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),W=e(")"),Z=e("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),j={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},J=e("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function Q(X,ss){const n=t("ExternalLinkIcon"),l=t("RouterLink");return i(),p("div",null,[s("ul",null,[s("li",null,[s("a",u,[h,a(n)])])]),k,b,_,s("blockquote",null,[s("p",null,[v,s("a",m,[f,a(n)]),g,s("a",E,[x,a(n)]),C,s("a",y,[T,a(n)])])]),q,I,N,R,$,s("ul",null,[s("li",null,[s("a",S,[w,a(n)])])]),A,B,M,D,s("ul",null,[O,s("li",null,[s("p",null,[V,s("a",L,[G,a(n)]),K,F,H])])]),Y,s("ul",null,[s("li",null,[s("p",null,[a(l,{to:"/"},{default:c(()=>[z]),_:1})])]),s("li",null,[s("p",null,[s("a",P,[U,a(n)]),W])]),s("li",null,[s("p",null,[Z,s("a",j,[J,a(n)])])])])])}const as=r(d,[["render",Q],["__file","43.html.vue"]]);export{as as default};

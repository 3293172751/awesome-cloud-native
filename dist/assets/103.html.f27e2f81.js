import{_ as t,r as i,o as l,c as r,a as s,b as o,d as n,e}from"./app.df617644.js";const c={},p=n(`<h2 id="_103-openim-quick-start" tabindex="-1"><a class="header-anchor" href="#_103-openim-quick-start" aria-hidden="true">#</a> 103: OpenIM \u{1F680} Quick Start</h2><p>You can quickly learn OpenIM engineering solutions, all it takes is one simple command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">make</span> demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u{1F932} In order to facilitate the user experience, we have provided a variety of deployment solutions, you can choose your own deployment method according to the list below:</p><details><summary>Deploying with Docker Compose</summary><blockquote><p>docker compose will not be maintained in future versions, but it is still the easiest and most convenient way to organize docker compose deployments into a separate project https://github.com/openim-sigs/openim-docker to maintain.</p></blockquote><p><strong>1. Clone the project</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># choose what you need, We take branch 3.2 as an example</span>
$ <span class="token assign-left variable">BRANCH</span><span class="token operator">=</span>release-v3.2
$ <span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token variable">$BRANCH</span> https://github.com/OpenIMSDK/Open-IM-Server openim/openim-server <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">export</span> <span class="token assign-left variable">openim_dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/openim <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> <span class="token variable">\${openim_dir}</span>/openim-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>Note</strong> If you don&#39;t know OpenIM&#39;s versioning policy, \u{1F4DA}Read our release policy: https://github.com/OpenIMSDK/Open-IM-Server/blob/main/docs/conversions/version.md</p></blockquote><p><strong>2. Configure the config file</strong></p><p>If you tried to get started quickly with <code>make demo</code>, then you know that our config file is generated by automation.</p><p>You can use <code>make init</code> to quickly initialize a configuration file</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">make</span> init
$ <span class="token function">git</span> <span class="token function">diff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Then feel free to modify your current config file, you can also modify <code>/scripts/install/environment.sh</code> document template, <code>make init</code> is essentially rendering <code>environment.sh</code> template, and then through the <code>make init</code> to automatically generate a new configuration.</p><p>If you only need to change the config file for a short time, or if you don&#39;t want to make any major changes in the future, you can modify the \`.env file directly</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>root 								<span class="token comment">#no need to modify</span>
<span class="token assign-left variable">PASSWORD</span><span class="token operator">=</span>openIM123  					<span class="token comment">#A combination of 8 or more numbers and letters, this password applies to redis, mysql, mongo, as well as accessSecret in config/config.yaml</span>
<span class="token assign-left variable">ENDPOINT</span><span class="token operator">=</span>http://127.0.0.1:10005 		<span class="token comment">#minio&#39;s external service IP and port, or use the domain name storage.xx.xx, the app must be able to access this IP and port or domain,</span>
<span class="token assign-left variable">API_URL</span><span class="token operator">=</span>http://127.0.0.1:10002/object/ 	<span class="token comment">#the app must be able to access this IP and port or domain,</span>
<span class="token assign-left variable">DATA_DIR</span><span class="token operator">=</span>./  							<span class="token comment">#designate large disk directory</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. Deploy and start</strong></p><blockquote><p><strong>Note</strong></p><p>You can deploy either directly with <code>make install</code> or with <code>docker compose up</code>, the logic is the same</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">make</span> <span class="token function">install</span>
<span class="token comment"># OR</span>
$ <span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Check the service</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">make</span> check
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Looking at the command line at this point, there are two items in the output, checking for the start of the component port that OpenIM depends on, and the start of the OpenIM core component</p></details><details><summary>Compile from Source</summary><p>Ur need <code>Go 1.18</code> or higher version, and <code>make</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go version <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">--version</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: One of the commands failed.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Version Details: https://github.com/OpenIMSDK/Open-IM-Server/blob/main/docs/conversions/version.md</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># choose what you need</span>
$ <span class="token assign-left variable">BRANCH</span><span class="token operator">=</span>release-v3.1
$ <span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token variable">$BRANCH</span> https://github.com/OpenIMSDK/Open-IM-Server openim <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">export</span> <span class="token assign-left variable">openim</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>/openim <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> <span class="token variable">$openim</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>make help</code> to help you see the instructions supported by OpenIM.</p></blockquote><p>Use <code>make check</code> to check all component starts</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">make</span> check
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can use the <code>make help-all</code> see OpenIM in action.</p></details>`,6),d=s("summary",null,"Component Configuration Instructions",-1),m=e(" The `config/config.yaml` file has detailed configuration instructions for the storage components. "),u=e("The config file is available via "),v={href:"https://github.com/OpenIMSDK/Open-IM-Server/blob/main/scripts/install/environment.sh",target:"_blank",rel:"noopener noreferrer"},b=e("environment.sh"),h=e(" configuration "),g={href:"https://github.com/OpenIMSDK/Open-IM-Server/blob/main/deployments/templates/openim.yaml",target:"_blank",rel:"noopener noreferrer"},k=e("openim.yaml"),f=e(" template, and then through the "),y=s("code",null,"make init",-1),_=e(" to automatically generate a new configuration."),x=n(`<ul><li><p>Zookeeper</p><ul><li><p>Used for RPC service discovery and registration, cluster support.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>zookeeper:
  schema: openim                          <span class="token comment">#Not recommended to modify</span>
  address: <span class="token punctuation">[</span> <span class="token number">127.0</span>.0.1:2181 <span class="token punctuation">]</span>             <span class="token comment">#address</span>
  username:                               <span class="token comment">#username</span>
  password:                               <span class="token comment">#password</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>MySQL</p><ul><li><p>Used for storing users, relationships, and groups, supports master-slave database.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysql:
  address: <span class="token punctuation">[</span> <span class="token number">127.0</span>.0.1:13306 <span class="token punctuation">]</span>            <span class="token comment">#address</span>
  username: root                          <span class="token comment">#username</span>
  password: openIM123                     <span class="token comment">#password</span>
  database: openIM_v2                     <span class="token comment">#Not recommended to modify</span>
  maxOpenConn: <span class="token number">1000</span>                       <span class="token comment">#maximum connection</span>
  maxIdleConn: <span class="token number">100</span>                        <span class="token comment">#maximum idle connection</span>
  maxLifeTime: <span class="token number">60</span>                         <span class="token comment">#maximum time a connection can be reused (seconds)</span>
  logLevel: <span class="token number">4</span>                             <span class="token comment">#log level 1=slient 2=error 3=warn 4=info</span>
  slowThreshold: <span class="token number">500</span>                      <span class="token comment">#slow statement threshold (milliseconds)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Mongo</p><ul><li><p>Used for storing offline messages, supports mongo sharded clusters.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mongo:
  uri:                                    <span class="token comment">#Use this value directly if not empty</span>
  address: <span class="token punctuation">[</span> <span class="token number">127.0</span>.0.1:37017 <span class="token punctuation">]</span>            <span class="token comment">#address</span>
  database: openIM                        <span class="token comment">#default mongo db</span>
  username: root                          <span class="token comment">#username</span>
  password: openIM123                     <span class="token comment">#password</span>
  maxPoolSize: <span class="token number">100</span>                        <span class="token comment">#maximum connections</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Redis</p><ul><li><p>Used for storing message sequence numbers, latest messages, user tokens, and mysql cache, supports cluster deployment.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>redis:
  address: <span class="token punctuation">[</span> <span class="token number">127.0</span>.0.1:16379 <span class="token punctuation">]</span>            <span class="token comment">#address</span>
  username:                               <span class="token comment">#username</span>
  password: openIM123                     <span class="token comment">#password</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>Kafka</p><ul><li><p>Used for message queues, for message decoupling, supports cluster deployment.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>kafka:
  username:                               <span class="token comment">#username</span>
  password:                               <span class="token comment">#password</span>
  addr: <span class="token punctuation">[</span> <span class="token number">127.0</span>.0.1:9092 <span class="token punctuation">]</span>                <span class="token comment">#address</span>
  latestMsgToRedis:
    topic: <span class="token string">&quot;latestMsgToRedis&quot;</span>
  offlineMsgToMongo:
    topic: <span class="token string">&quot;offlineMsgToMongoMysql&quot;</span>
  msgToPush:
    topic: <span class="token string">&quot;msqToPush&quot;</span>
  msgToModify:
    topic: <span class="token string">&quot;msgToModify&quot;</span>
  consumerGroupID:
    msgToRedis: redis
    msgToMongo: mongo
    msgToMySql: mysql
    msgToPush: push
    msgToModify: modify
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul>`,1),M=n("<details><summary>Deployed with kubernetes</summary><p>read: https://github.com/OpenIMSDK/Open-IM-Server/blob/main/deployments/README.md</p></details><details><summary>Open IM Ports</summary><table><thead><tr><th>TCP Port</th><th>Description</th><th>Operation</th></tr></thead><tbody><tr><td>TCP:10001</td><td>ws protocol, message port such as message sending, pushing etc, used for client SDK</td><td>Port release or nginx reverse proxy, and firewall off</td></tr><tr><td>TCP:10002</td><td>api port, such as user, friend, group, message interfaces.</td><td>Port release or nginx reverse proxy, and firewall off</td></tr><tr><td>TCP:10005</td><td>Required when choosing minio storage (openIM uses minio storage by default)</td><td>Port release or nginx reverse proxy, and firewall off</td></tr></tbody></table></details><details><summary>Open Chat Ports</summary><ul><li>chat warehouse: https://github.com/OpenIMSDK/chat</li></ul><table><thead><tr><th>TCP Port</th><th>Description</th><th>Operation</th></tr></thead><tbody><tr><td>TCP:10008</td><td>Business system, such as registration, login etc</td><td>Port release or nginx reverse proxy, and firewall off</td></tr><tr><td>TCP:10009</td><td>Management backend, such as statistics, banning etc</td><td>Port release or nginx reverse proxy, and firewall off</td></tr></tbody></table></details>",3);function I(w,q){const a=i("ExternalLinkIcon");return l(),r("div",null,[p,s("details",null,[d,m,s("p",null,[u,s("a",v,[b,o(a)]),h,s("a",g,[k,o(a)]),f,y,_]),x]),M])}const T=t(c,[["render",I],["__file","103.html.vue"]]);export{T as default};

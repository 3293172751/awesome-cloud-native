import{_ as r,r as a,o as l,c,a as e,b as n,w as d,e as s,d as o}from"./app.a9132acd.js";const u={},p={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},b=s("author"),h=e("h1",{id:"\u7B2C81\u8282-kafka-\u670D\u52A1\u5668\u6559\u7A0B",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#\u7B2C81\u8282-kafka-\u670D\u52A1\u5668\u6559\u7A0B","aria-hidden":"true"},"#"),s(" \u7B2C81\u8282 kafka \u670D\u52A1\u5668\u6559\u7A0B")],-1),v=e("div",null,[e("a",{href:"80.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),e("a",{href:"82.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),_=e("br",null,null,-1),g=s("\u2764\uFE0F\u{1F495}\u{1F495}\u8BB0\u5F55"),m={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},k=s("sealos"),f=s("\u5F00\u6E90\u9879\u76EE\u7684\u5B66\u4E60\u8FC7\u7A0B\u3002"),x={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},q=s("k8s,docker\u548C\u4E91\u539F\u751F\u7684\u5B66\u4E60"),w=s("\u3002Myblog:"),C={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},S=s("http://nsddd.top"),R=o(`<hr><p>[TOC]</p><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
A<span class="token text string">[Conversation]</span> <span class="token arrow operator">--&gt;</span> B<span class="token text string">(markConversationMessageAsRead)</span>
B <span class="token arrow operator">--&gt;</span> C<span class="token text string">(getConversation)</span>
C <span class="token arrow operator">--&gt;</span> D<span class="token text string">(getConversationPeerNormalMsgSeq)</span>
D <span class="token arrow operator">--&gt;</span> E<span class="token text string">(getConversationNormalMsgSeq)</span>
E <span class="token arrow operator">--&gt;</span> F<span class="token text string">(getUnreadMessage)</span>
F <span class="token arrow operator">--&gt;</span> G<span class="token text string">(getAsReadMsgMapAndList)</span>
G <span class="token arrow operator">--&gt;</span> H<span class="token text string">(markConversationAsReadSvr)</span>
H <span class="token arrow operator">--&gt;</span> I<span class="token text string">(MarkConversationMessageAsRead)</span>
I <span class="token arrow operator">--&gt;</span> J<span class="token text string">(updateColumnsConversation)</span>
J <span class="token arrow operator">--&gt;</span> K<span class="token text string">(unreadChangeTrigger)</span>
B <span class="token arrow operator">--&gt;</span> L<span class="token text string">(markConversationMessageAsReadByMsgID)</span>
L <span class="token arrow operator">--&gt;</span> C
L <span class="token arrow operator">--&gt;</span> M<span class="token text string">(getMessagesByClientMsgIDs)</span>
M <span class="token arrow operator">--&gt;</span> N<span class="token text string">(getAsReadMsgMapAndList)</span>
N <span class="token arrow operator">--&gt;</span> H
N <span class="token arrow operator">--&gt;</span> O<span class="token text string">(MarkMsgsAsRead)</span>
O <span class="token arrow operator">--&gt;</span> I
O <span class="token arrow operator">--&gt;</span> P<span class="token text string">(MarkConversationMessageAsRead)</span>
P <span class="token arrow operator">--&gt;</span> K
B <span class="token arrow operator">--&gt;</span> Q<span class="token text string">(doUnreadCount)</span>
Q <span class="token arrow operator">--&gt;</span> C
C <span class="token arrow operator">--&gt;</span> R<span class="token text string">(GetConversation)</span>
R <span class="token arrow operator">--&gt;</span> S<span class="token text string">(doReadDrawing)</span>
S <span class="token arrow operator">--&gt;</span> T<span class="token text string">(UnmarshalNotificationElem)</span>
T <span class="token arrow operator">--&gt;</span> U<span class="token text string">(GetConversation)</span>
U <span class="token arrow operator">--&gt;</span> V<span class="token text string">(GetMessagesBySeqs)</span>
V <span class="token arrow operator">--&gt;</span> W<span class="token text string">(UpdateMessage)</span>
W <span class="token arrow operator">--&gt;</span> X<span class="token text string">(OnRecvC2CReadReceipt/OnRecvGroupReadReceipt)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u62C9\u53D6\u4FE1\u606F\u5217\u8868\u7684\u903B\u8F91\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>func (c *Conversation) pullMessageAndReGetHistoryMessages(ctx context.Context, conversationID string, seqList []int64, notStartTime,
	isReverse bool, count, sessionType int, startTime int64, list *[]*model_struct.LocalChatLog, messageListCallback *sdk.GetAdvancedHistoryMessageListCallback) {
	existedSeqList, err := c.db.SuperGroupGetAlreadyExistSeqList(ctx, conversationID, seqList)
	if err != nil {
		// log.Error(operationID, &quot;SuperGroupGetAlreadyExistSeqList err&quot;, err.Error(), sourceID, seqList)
		return
	}
	if len(existedSeqList) == len(seqList) {
		// log.Debug(operationID, &quot;do not pull message&quot;)
		return
	}
	newSeqList := utils.DifferenceSubset(seqList, existedSeqList)
	if len(newSeqList) == 0 {
		// log.Debug(operationID, &quot;do not pull message&quot;)
		return
	}
	var pullMsgResp sdkws.PullMessageBySeqsResp
	var pullMsgReq sdkws.PullMessageBySeqsReq
	pullMsgReq.UserID = c.loginUserID
	var seqRange sdkws.SeqRange
	seqRange.ConversationID = conversationID
	seqRange.Begin = newSeqList[0]
	seqRange.End = newSeqList[len(newSeqList)-1]
	seqRange.Num = int64(len(newSeqList))
	pullMsgReq.SeqRanges = append(pullMsgReq.SeqRanges, &amp;seqRange)
	log.ZDebug(ctx, &quot;read diffusion group pull message,  &quot;, &quot;req&quot;, pullMsgReq)
	if notStartTime &amp;&amp; !c.LongConnMgr.IsConnected() {
		return
	}
	err = c.SendReqWaitResp(ctx, &amp;pullMsgReq, constant.PullMsgBySeqList, &amp;pullMsgResp)
	if err != nil {
		errHandle(newSeqList, list, err, messageListCallback)
		log.ZDebug(ctx, &quot;pullmsg SendReqWaitResp failed&quot;, err, &quot;req&quot;)
	} else {
		log.ZDebug(ctx, &quot;syncMsgFromServerSplit pull msg&quot;, &quot;resp&quot;, pullMsgResp)
		if v, ok := pullMsgResp.Msgs[conversationID]; ok {
			c.pullMessageIntoTable(ctx, pullMsgResp.Msgs, conversationID)
			messageListCallback.IsEnd = v.IsEnd

			if notStartTime {
				*list, err = c.db.GetMessageListNoTime(ctx, conversationID, count, isReverse)
			} else {
				*list, err = c.db.GetMessageList(ctx, conversationID, count, startTime, isReverse)
			}
		}

	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EFF\u7167\u4E0A\u9762\u7684\u903B\u8F91\u5199\u51FA\u5DF2\u8BFB\u4FE1\u606F\u7684\u903B\u8F91\uFF0C\u4FEE\u6539\u4E0B\u9762\u4EE3\u7801\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>func (c *Conversation) markMsgAsRead2Svr(ctx context.Context, conversationID string, seqs []int64) error {

}

func (c *Conversation) markConversationAsReadSvr(ctx context.Context, conversationID string, hasReadSeq int64) error {

}

func (c *Conversation) setConversationHasReadSeq(ctx context.Context, conversationID string, hasReadSeq int64) error {

}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5F88\u9AD8\u5174\u4F60\u6210\u4E3A\u4E86 Kubecub member \u7684\u4E00\u5458\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5C06\u4F1A\u5171\u540C\u6253\u9020\u9876\u7EA7\u7684\u5F00\u6E90\u793E\u533A *kubecub*</strong>\u3002 \u{1F4AA}</p><p>\u6211\u4EEC\u6709\u4E24\u4E2A\u5F88\u7279\u6B8A\u7684\u4ED3\u5E93\uFF0C\u5206\u522B\u5B9A\u4E49\u4E86\u79C1\u6709\u89C4\u5219\u548C\u516C\u5171\u89C4\u5219\uFF0C\u5176\u4E2D\u79C1\u6709\u89C4\u5219\u5BF9\u5E94\u79C1\u6709\u4ED3\u5E93\u548C member\u3002</p><ul><li>https://github.com/kubecub/.github-private</li><li>https://github.com/kubecub/.github</li></ul><h2 id="\u9700\u8981\u7684\u6B65\u9AA4-\u270F\uFE0F" tabindex="-1"><a class="header-anchor" href="#\u9700\u8981\u7684\u6B65\u9AA4-\u270F\uFE0F" aria-hidden="true">#</a> \u9700\u8981\u7684\u6B65\u9AA4 \u270F\uFE0F</h2>`,11),M=s("\u6211\u4EEC\u63A8\u8350\u4F60\u5C06 kubecub \u52A0\u5165\u5230\u81EA\u5DF1 GitHub \u4E3B\u9875\u4E0A\u9762\uFF0C\u70B9\u51FB "),y={href:"https://github.com/orgs/kubecub/people",target:"_blank",rel:"noopener noreferrer"},L=s("people"),D=s(" \u6539\u53D8 Private \u4E3A Public. \u{1F44D}"),I=s("\u4E00\u5B9A\u8981\u77E5\u9053 "),E={href:"https://github.com/kubecub/community",target:"_blank",rel:"noopener noreferrer"},T=s("community"),A=s(" \u4ED3\u5E93\u662F\u8BB0\u5F55\u8FD9\u66F4\u591A\u8D21\u732E\u8005\u9700\u8981\u7684\u5E2E\u52A9\u6587\u6863\uFF0C\u5305\u62EC\u8D21\u732E\u8005\u6587\u6863\uFF0CRFC\u3002"),B=o(`<h2 id="github-\u{1F419}" tabindex="-1"><a class="header-anchor" href="#github-\u{1F419}" aria-hidden="true">#</a> .github \u{1F419}</h2><p><code>.github/workflows/</code> \u76EE\u5F55:\u5305\u542B\u51E0\u4E2A GitHub Actions \u5DE5\u4F5C\u6D41\u7A0B\u6A21\u677F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>- dependabot.yml <span class="token comment"># \u542F\u7528 Dependabot,\u81EA\u52A8\u76D1\u89C6\u4F9D\u8D56\u66F4\u65B0 \u{1F440}</span>
- license-checker.yml <span class="token comment"># \u8FD0\u884C\u8BB8\u53EF\u8BC1\u68C0\u67E5,\u786E\u4FDD\u5305\u542B\u5F00\u6E90\u8BB8\u53EF\u8BC1 \u{1F6E1}\uFE0F</span>
- superlinter.yml <span class="token comment"># \u8FD0\u884C Super Linter,\u68C0\u67E5\u4EE3\u7801\u6837\u5F0F\u548C\u683C\u5F0F \u{1F50D}</span>
- security.yml <span class="token comment"># \u542F\u7528\u5B89\u5168\u8B66\u62A5,\u68C0\u6D4B\u654F\u611F\u6570\u636E\u6CC4\u9732 \u{1F6A8}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.github/CODEOWNERS</code>:\u5B9A\u4E49\u4ED3\u5E93\u7684\u4EE3\u7801\u6240\u6709\u8005\u89C4\u5219 \u{1F46A}</p><p><code>.github/dependabot.yml</code>:Dependabot \u914D\u7F6E\u6587\u4EF6,\u5B9A\u4E49\u8981\u76D1\u89C6\u7684\u4F9D\u8D56\u9879\u548C\u66F4\u65B0\u9891\u7387 \u{1F440}</p><p><code>.github/no-response.yml</code>:\u5B9A\u4E49&quot;\u6CA1\u6709\u56DE\u5E94&quot;\u8B66\u62A5\u7684\u914D\u7F6E \u26A0\uFE0F</p><p><code>.github/config.yml</code>:\u542F\u7528 CodeQL \u4EE3\u7801\u626B\u63CF,\u5B9A\u671F\u626B\u63CF\u4EE3\u7801\u6F0F\u6D1E\u548C\u9519\u8BEF \u{1F512}</p><p><code>.github/ISSUE_TEMPLATE/</code>:Issue \u6A21\u677F\u76EE\u5F55,\u5305\u542B Bug \u62A5\u544A\u3001\u529F\u80FD\u8BF7\u6C42\u7B49 Issue \u9ED8\u8BA4\u6A21\u677F \u{1F4D1}</p><p><code>.gitignore</code>:Git \u5FFD\u7565\u89C4\u5219\u6A21\u677F \u{1F6AB}</p><p><code>LICENSE</code>:MIT \u8BB8\u53EF\u8BC1\u6A21\u677F \u{1F4DC}</p><p><code>.editorconfig</code>:\u7F16\u8F91\u5668\u914D\u7F6E\u6587\u4EF6,\u5B9A\u4E49\u4EE3\u7801\u98CE\u683C\u89C4\u5219 \u270F\uFE0F</p>`,11),G={href:"http://readme.md/",target:"_blank",rel:"noopener noreferrer"},K=s("README.md"),N=s(":\u81EA\u8FF0\u6587\u4EF6\u6A21\u677F \u{1F4C3}"),U=e("h2",{id:"why-choose-kubecub-\u{1F914}",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#why-choose-kubecub-\u{1F914}","aria-hidden":"true"},"#"),s(" Why Choose Kubecub? \u{1F914}")],-1),z=e("p",null,"Kubecub \u5E2E\u52A9\u66F4\u591A\u7684\u5F00\u53D1\u8005\u548C\u5B66\u751F\u5FEB\u901F\u52A0\u5165\u5F00\u6E90\u5E76\u4E14\u5B66\u4E60\u5F00\u6E90\uFF0C\u63D0\u4F9B\u4E86\u6210\u719F\u7684\u5404\u4E2A\u8BED\u8A00\u624B\u811A\u67B6\u548C\u6A21\u677F\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u6210\u719F\u7684\u9879\u76EE\u89C4\u8303\u3001\u793E\u533A\u89C4\u8303\u3001\u4EE5\u53CA\u8FD0\u8425\u89C4\u8303\uFF0C\u901A\u8FC7 Kubecub\uFF0C\u4F60\u80FD\u627E\u5230\u66F4\u591A\u6709\u5171\u540C\u76EE\u6807\u548C\u613F\u671B\u7684\u5F00\u53D1\u8005\u3001\u670B\u53CB\uFF0C\u6211\u4EEC\u76F8\u4E92\u4E4B\u95F4 review \u4EE3\u7801\uFF0C\u5206\u4EAB\u521B\u610F\uFF0C\u5E76\u4E14\u5B9E\u73B0\u81EA\u5DF1\u7684\u521B\u610F\u3002\u{1F468}\u200D\u{1F4BB} \u{1F469}\u200D\u{1F4BB}",-1),j=e("p",null,"\u4F60\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u52A0\u5165 Kubecub \u793E\u533A\uFF1A",-1),O=e("li",null,"\u53C2\u4E0E Kubecub \u5DF2\u6709\u7684\u4EFB\u610F\u4E00\u4E2A\u9879\u76EE\u548C\u529F\u80FD\u6A21\u5757\u8FDB\u884C\u5F00\u53D1\u3002",-1),H=s("\u62B1\u7740\u521B\u9020\u4EF7\u503C\u7684\u5F62\u5F0F\uFF0C"),P={href:"https://github.com/organizations/kubecub/repositories/new",target:"_blank",rel:"noopener noreferrer"},W=s("\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u5B58\u50A8\u5E93"),Y=s(" \u5E76\u4E14\u516C\u5F00\u5B83\uFF0C\u4F7F\u7528\u6211\u4EEC\u624B\u811A\u67B6\u548C\u6A21\u677F\u3001\u4EE5\u53CA robot \u66F4\u597D\u7684\u5F00\u53D1\u4F53\u9A8C\u3002 \u{1F916}"),Q=e("p",null,"Kubecub \u65E8\u5728\u4E3A Kubernetes \u7528\u6237\u548C\u5F00\u53D1\u8005\u63D0\u4F9B\u4E00\u4E2A\u4E2D\u5FC3\u4F4D\u7F6E\uFF0C\u4EE5\u5206\u4EAB\u4ED6\u4EEC\u7684\u7ECF\u9A8C\u5E76\u76F8\u4E92\u5B66\u4E60\u3002\u6211\u4EEC\u7684\u793E\u533A\u63D0\u4F9B\u5404\u79CD\u8D44\u6E90\uFF0C\u521B\u5EFA\u5404\u79CD\u6709\u610F\u601D\u7684\u5C0F\u9879\u76EE\u548C\u5DE5\u5177\u3002\u5305\u62EC\uFF1A",-1),V=e("strong",null,"\u6559\u7A0B\uFF1A",-1),F=s(" Kubecub \u63D0\u4F9B\u4E86\u6574\u5957\u7684\u6587\u6863\u3001\u793E\u533A\u7BA1\u7406\u3001\u9879\u76EE\u7BA1\u7406\u3001\u793E\u533A\u6CBB\u7406\u4F53\u7CFB\u6587\u7AE0\uFF0C\u5728 "),J={href:"https://github.com/kubecub/community",target:"_blank",rel:"noopener noreferrer"},Z=s("community"),X=s(" \u793E\u533A\u5B58\u50A8\u5E93\u4E2D\u6709\u6210\u719F\u7684\u6CBB\u7406\u4F53\u7CFB\u3002\u{1F4D6}"),$=e("strong",null,"\u6587\u6863\uFF1A",-1),ee=s(" \u8BBF\u95EE\u6211\u4EEC\u7684 "),se={href:"https://github.com/kubecub/docs",target:"_blank",rel:"noopener noreferrer"},ne=s("\u7EFC\u5408\u6587\u6863"),te=s("\uFF0C\u5BF9\u6574\u4E2A Kubecub \u7684\u4ED3\u5E93\u901A\u8FC7 actions \u81EA\u52A8\u5316\u540C\u6B65\u548C\u7BA1\u7406\uFF0C\u9664\u6B64\u4E4B\u5916\uFF0C\u6211\u4EEC\u63D0\u4F9B\u4E86\u5F88\u591A\u5B66\u4E60\u6587\u6863\uFF0C\u5305\u62EC [Kubecub \u793E\u533A\u5B66\u4E60\u6587\u6863](javascript:void(0))\uFF0C\u8FD8\u63D0\u4F9B\u4E86 [Go\u8BED\u8A00](javascript:void(0)) \u548C [Kubernetes](javascript:void(0)) \u7684\u6559\u7A0B\u6587\u6863\u3002\u{1F4D1}"),oe=e("strong",null,"\u8BBA\u575B\uFF1A",-1),ae=s(" \u52A0\u5165\u6211\u4EEC\u7684 "),ie={href:"https://join.slack.com/t/kubecub/shared_invite/zt-1se0k2bae-lkYzz0_T~BYh3rjkvlcUqQ",target:"_blank",rel:"noopener noreferrer"},re=s("Slack"),le=s("\uFF0C\u5411\u6211\u4EEC\u7684\u793E\u533A\u63D0\u95EE\u5E76\u83B7\u5F97\u5E2E\u52A9\u3002 \u{1F4AC}"),ce=e("strong",null,"\u6D3B\u52A8\uFF1A",-1),de=s(" \u53C2\u52A0\u6211\u4EEC\u7684 "),ue={href:"https://github.com/orgs/kubecub/discussions",target:"_blank",rel:"noopener noreferrer"},pe=s("\u6D3B\u52A8"),be=s("\uFF0C\u4E0E\u5176\u4ED6 Kubecub \u7684\u7528\u6237\u548C\u5F00\u53D1\u8005\u8054\u7CFB\u5E76\u4ECE\u7ECF\u9A8C\u4E30\u5BCC\u7684\u5F00\u53D1\u4EBA\u5458\u5B66\u4E60\u3002 \u{1F465}"),he=o('<p>\u4E00\u8D77\u52A0\u5165 Kubecub\uFF0C\u5F00\u542F\u4F60\u7684\u5F00\u6E90\u4E4B\u65C5\uFF01\u{1F389}</p><h2 id="what-can-you-find-\u{1F680}" tabindex="-1"><a class="header-anchor" href="#what-can-you-find-\u{1F680}" aria-hidden="true">#</a> What can you find\uFF1F \u{1F680}</h2><p>\u60A8\u53EF\u4EE5\u53C2\u4E0E\u6BCF\u4E2A\u6A21\u5757\u3002\u8FD9\u662F\u4E00\u4E2A\u5B8C\u5168\u5F00\u6E90\u7684\u793E\u533A\uFF0C\u5177\u6709\u533A\u5757\u94FE\u5B89\u5168\u6027\uFF0C\u53EF\u4EE5\u5E2E\u52A9\u60A8\u52A0\u5165\u5F00\u6E90\uFF0C\u5E2E\u52A9\u60A8\u5B66\u4E60\uFF0C\u5E76\u5141\u8BB8\u60A8\u6210\u4E3A\u8D21\u732E\u8005\u3002</p><p>\u4E0D\u7BA1\u60A8\u5B66\u4E60\u7684\u662F Java\u3001Python\u3001Go\u3001Rust\u3001C/C++\u3001JavaScript\u3001HTML\u3001CSS\uFF0C\u751A\u81F3\u662F\u5199\u51FA\u4F18\u79C0\u6587\u6863\u7684\u80FD\u529B\uFF0C\u60A8\u90FD\u59CB\u7EC8\u53D7\u5230 kubecub \u7684\u6B22\u8FCE\u3002\u5373\u4F7F\u60A8\u8BA4\u4E3A\u81EA\u5DF1\u4E0D\u662F\u4E00\u4E2A\u4F1F\u5927\u7684 kubecub\uFF0C\u6211\u4EEC\u4E5F\u5E0C\u671B\u60A8\u6210\u4E3A\u4E00\u4E2A kubecub\u3002 \u{1F604}</p><p>\u5982\u679C\u60A8\u60F3\u52A0\u5165\u6211\u4EEC\uFF0C\u8BF7\u53D1\u9001\u7535\u5B50\u90AE\u4EF6\u5230 <a href="mailto:cub@nsddd.top">cub@nsddd.top</a>\uFF0C\u5305\u62EC\u60A8\u7684 GitHub \u5730\u5740\u3002 \u{1F4E7}</p><h2 id="contact-us-\u{1F44B}" tabindex="-1"><a class="header-anchor" href="#contact-us-\u{1F44B}" aria-hidden="true">#</a> Contact Us \u{1F44B}</h2><p>\u6211\u4EEC\u5728 kubecub \u8FD9\u91CC\u975E\u5E38\u91CD\u89C6\u4E0E\u6211\u4EEC\u7684\u7528\u6237\u3001\u5F00\u53D1\u4EBA\u5458\u548C\u8D21\u732E\u8005\u4E4B\u95F4\u7684\u7D27\u5BC6\u8054\u7CFB\u3002\u51ED\u501F\u5E9E\u5927\u7684\u793E\u533A\u548C\u7EF4\u62A4\u4EBA\u5458\u56E2\u961F\uFF0C\u6211\u4EEC\u59CB\u7EC8\u5728\u8FD9\u91CC\u4E3A\u60A8\u63D0\u4F9B\u5E2E\u52A9\u548C\u652F\u6301\u3002\u65E0\u8BBA\u60A8\u662F\u60F3\u52A0\u5165\u6211\u4EEC\u7684\u793E\u533A\u8FD8\u662F\u6709\u4EFB\u4F55\u95EE\u9898\u6216\u5EFA\u8BAE\uFF0C\u6211\u4EEC\u90FD\u6B22\u8FCE\u60A8\u4E0E\u6211\u4EEC\u8054\u7CFB\u3002</p>',7),ve=s("\u6211\u4EEC\u6700\u63A8\u8350\u7684\u8054\u7CFB\u65B9\u5F0F\u662F\u901A\u8FC7 "),_e={href:"https://join.slack.com/t/c-ub/shared_invite/zt-1se0k2bae-lkYzz0_T~BYh3rjkvlcUqQ",target:"_blank",rel:"noopener noreferrer"},ge=s("Slack"),me=s("\u3002\u5373\u4F7F\u60A8\u5728\u4E2D\u56FD\uFF0CSlack \u901A\u5E38\u4E0D\u4F1A\u88AB\u9632\u706B\u5899\u5C4F\u853D\uFF0C\u8FD9\u4F7F\u5F97\u4E0E\u6211\u4EEC\u8054\u7CFB\u53D8\u5F97\u5F88\u5BB9\u6613\u3002\u6211\u4EEC\u7684 Slack \u793E\u533A\u662F\u4E0E kubecub \u7684\u5176\u4ED6\u7528\u6237\u548C\u5F00\u53D1\u4EBA\u5458\u8BA8\u8BBA\u548C\u5206\u4EAB\u60F3\u6CD5\u548C\u5EFA\u8BAE\u7684\u7406\u60F3\u573A\u6240\u3002\u60A8\u53EF\u4EE5\u8BE2\u95EE\u6280\u672F\u95EE\u9898\uFF0C\u5BFB\u6C42\u5E2E\u52A9\uFF0C\u6216\u4E0E kubecub \u7684\u5176\u4ED6\u7528\u6237\u5206\u4EAB\u60A8\u7684\u7ECF\u9A8C\u3002"),ke=e("p",null,"\u9664\u4E86 Slack\uFF0C\u6211\u4EEC\u8FD8\u63D0\u4F9B\u4EE5\u4E0B\u8054\u7CFB\u65B9\u5F0F\uFF1A",-1),fe=e("a",{href:"https://join.slack.com/t/kubecub/shared_invite/zt-1se0k2bae-lkYzz0_T~BYh3rjkvlcUqQ",target:"_blank"},[e("img",{src:"https://img.shields.io/badge/Slack-automation%2B-blueviolet?logo=slack&logoColor=white"})],-1),xe=s(" \u6211\u4EEC\u8FD8\u6709 Slack \u9891\u9053\u4F9B\u60A8\u4EA4\u6D41\u548C\u8BA8\u8BBA\u3002\u8BBF\u95EE https://slack.com/ \u5E76\u52A0\u5165\u6211\u4EEC\u7684 "),qe={href:"https://join.slack.com/t/kubecub/shared_invite/zt-1se0k2bae-lkYzz0_T~BYh3rjkvlcUqQ",target:"_blank",rel:"noopener noreferrer"},we=s("\u{1F440} kubecub slack"),Ce=s(" \u56E2\u961F\u9891\u9053\u3002"),Se=e("li",null,[e("a",{href:"https://mail.google.com/mail/u/0/?fs=1&tf=cm&to=3293172751nss@gmail.com",target:"_blank"},[e("img",{src:"https://img.shields.io/badge/gmail-%40kubecub-blue?style=social&kubecubo=gmail&logo=gmail"})]),s(" \u901A\u8FC7\u7535\u5B50\u90AE\u4EF6\u4E0E\u6211\u4EEC\u8054\u7CFB "),e("a",{href:"mailto:3293172751nss@gmail.com"},"\u{1F4E8}Gmail: 3293172751nss@gmail.com"),s("\u3002\u5982\u679C\u60A8\u6709\u4EFB\u4F55\u9700\u8981\u89E3\u51B3\u7684\u95EE\u9898\u6216\u95EE\u9898\uFF0C\u6216\u8005\u5BF9\u6211\u4EEC\u7684\u5F00\u6E90\u9879\u76EE\u6709\u4EFB\u4F55\u5EFA\u8BAE\u548C\u53CD\u9988\uFF0C\u8BF7\u968F\u65F6\u901A\u8FC7\u7535\u5B50\u90AE\u4EF6\u4E0E\u6211\u4EEC\u8054\u7CFB\u3002")],-1),Re=e("a",{href:"https://nsddd.top",target:"_blank"},[e("img",{src:"https://img.shields.io/badge/\u535A\u5BA2-%40kubecub-blue?style=social&logo=Octopus Deploy&logoColor=red"})],-1),Me=s(" \u9605\u8BFB\u6211\u4EEC\u7684 "),ye={href:"https://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},Le=s("\u{1F916}kubecub"),De=s("\u3002\u6211\u4EEC\u7684 kubecub \u662F\u4E86\u89E3 kubecub \u9879\u76EE\u548C\u8D8B\u52BF\u7684\u7EDD\u4F73\u573A\u6240\u3002\u5728 kubecub \u4E0A\uFF0C\u6211\u4EEC\u5206\u4EAB\u6211\u4EEC\u7684\u6700\u65B0\u53D1\u5C55\u3001\u6280\u672F\u8D8B\u52BF\u548C\u5176\u4ED6\u6709\u8DA3\u4FE1\u606F\u3002"),Ie=e("a",{href:"https://twitter.com/xxw3293172751",target:"_blank"},[e("img",{src:"https://img.shields.io/badge/twitter-%40kubecub-informational?kubecubo=twitter&style=flat-square&logo=twitter"})],-1),Ee=s(" \u6DFB\u52A0 "),Te={href:"https://twitter.com/xxw3293172751",target:"_blank",rel:"noopener noreferrer"},Ae=s("\u{1F54A}\uFE0FTwitter"),Be=s(" \u3002\u5982\u679C\u60A8\u559C\u6B22\u793E\u4EA4\u5A92\u4F53\uFF0C\u6211\u4EEC\u7684 Twitter \u5E10\u6237\u662F\u4E86\u89E3 kubecub \u9879\u76EE\u65B0\u95FB\u548C\u8D8B\u52BF\u7684\u597D\u65B9\u6CD5\u3002\u5728 Twitter \u4E0A\uFF0C\u6211\u4EEC\u5206\u4EAB\u6211\u4EEC\u7684\u6700\u65B0\u6280\u672F\u548C\u8D8B\u52BF\uFF0C\u4EE5\u53CA\u76F8\u5173\u65B0\u95FB\u548C\u6D3B\u52A8\u3002"),Ge=e("a",{href:"http://sm.nsddd.top/sm0d220ad72063197b9875379403f6c88.jpg",target:"_blank"},[e("img",{src:"https://img.shields.io/badge/\u5FAE\u4FE1-smile-brightgreen?kubecubo=wechat&style=flat-square?logo=wechat"})],-1),Ke=s(" \u6DFB\u52A0 "),Ne={href:"https://img.shields.io/badge/%E5%BE%AE%E4%BF%A1-smile-brightgreen?kubecubo=wechat&style=flat-square",target:"_blank",rel:"noopener noreferrer"},Ue=s("\u{1F4F2}Wechat"),ze=s(" \u5E76\u6307\u51FA\u60A8\u662F kubecub \u7684\u7528\u6237\u6216\u5F00\u53D1\u4EBA\u5458\u3002\u6211\u4EEC\u4F1A\u5C3D\u5FEB\u5904\u7406\u60A8\u7684\u8BF7\u6C42\u3002"),je=e("p",null,"\u65E0\u8BBA\u60A8\u662F\u60F3\u52A0\u5165\u6211\u4EEC\u7684\u793E\u533A\u8FD8\u662F\u6709\u4EFB\u4F55\u95EE\u9898\u6216\u5EFA\u8BAE\uFF0C\u6211\u4EEC\u90FD\u6B22\u8FCE\u60A8\u4E0E\u6211\u4EEC\u8054\u7CFB\u3002 \u{1F44B}",-1),Oe=e("blockquote",null,[e("p",null,"Note \u{1F4DD} \u8FD9\u4E0D\u662F\u4E00\u4E2A\u79C1\u6709\u5B58\u50A8\u5E93\uFF0Ckubecub \u7684\u76EE\u7684\u662F\u5E2E\u52A9\u66F4\u591A\u7684\u4EBA\u5B66\u4E60\u548C\u8FDB\u6B65\u3002kubecub \u7684\u8D5E\u52A9\u548C\u8D21\u732E\u5C06\u662F\u516C\u5F00\u900F\u660E\u7684\uFF0C\u6240\u6709\u8D5E\u52A9\u6536\u76CA\u5C06\u7528\u4E8E\u5584\u826F\u7684\u4E8B\u4E1A\u3002 \u2764\uFE0F")],-1),He=e("h2",{id:"backers",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#backers","aria-hidden":"true"},"#"),s(" Backers")],-1),Pe=s("Thank you to all our backers! \u{1F64F} ["),We={href:"https://opencollective.com/kubecub#backer",target:"_blank",rel:"noopener noreferrer"},Ye=s("Become a backer"),Qe=s("]"),Ve=e("p",null,"We want anyone to get involved in our community, we offer gifts and rewards, and we welcome you to join us every Thursday night.",-1),Fe=s("We take notes of each "),Je={href:"https://github.com/OpenIMSDK/Open-IM-Server/issues/381",target:"_blank",rel:"noopener noreferrer"},Ze=s("biweekly meeting"),Xe=s(" in "),$e={href:"https://github.com/OpenIMSDK/Open-IM-Server/discussions/categories/meeting",target:"_blank",rel:"noopener noreferrer"},es=s("GitHub discussions"),ss=s(", and our minutes are written in "),ns={href:"https://docs.google.com/document/d/1nx8MDpuG74NASx081JcCpxPgDITNTpIIos0DS6Vr9GU/edit?usp=sharing",target:"_blank",rel:"noopener noreferrer"},ts=s("Google Docs"),os=s("."),as=e("h2",{id:"end-\u94FE\u63A5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#end-\u94FE\u63A5","aria-hidden":"true"},"#"),s(" END \u94FE\u63A5")],-1),is=e("ul",null,[e("li",null,[e("div",null,[e("a",{href:"80.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),e("a",{href:"82.md",style:{float:"right"}}," \uFE0F\u4E0B\u4E00\u8282\u{1F517}")])])],-1),rs=s("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),ls={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},cs=e("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),ds=s(")"),us=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),ps={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},bs=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function hs(vs,_s){const t=a("ExternalLinkIcon"),i=a("RouterLink");return l(),c("div",null,[e("ul",null,[e("li",null,[e("a",p,[b,n(t)])])]),h,v,_,e("blockquote",null,[e("p",null,[g,e("a",m,[k,n(t)]),f,e("a",x,[q,n(t)]),w,e("a",C,[S,n(t)])])]),R,e("p",null,[M,e("a",y,[L,n(t)]),D]),e("p",null,[I,e("a",E,[T,n(t)]),A]),B,e("p",null,[e("a",G,[K,n(t)]),N]),U,z,j,e("ul",null,[O,e("li",null,[H,e("a",P,[W,n(t)]),Y])]),Q,e("ul",null,[e("li",null,[V,F,e("a",J,[Z,n(t)]),X]),e("li",null,[$,ee,e("a",se,[ne,n(t)]),te]),e("li",null,[oe,ae,e("a",ie,[re,n(t)]),le]),e("li",null,[ce,de,e("a",ue,[pe,n(t)]),be])]),he,e("p",null,[ve,e("a",_e,[ge,n(t)]),me]),ke,e("ul",null,[e("li",null,[fe,xe,e("a",qe,[we,n(t)]),Ce]),Se,e("li",null,[Re,Me,e("a",ye,[Le,n(t)]),De]),e("li",null,[Ie,Ee,e("a",Te,[Ae,n(t)]),Be]),e("li",null,[Ge,Ke,e("a",Ne,[Ue,n(t)]),ze])]),je,Oe,He,e("p",null,[Pe,e("a",We,[Ye,n(t)]),Qe]),Ve,e("p",null,[Fe,e("a",Je,[Ze,n(t)]),Xe,e("a",$e,[es,n(t)]),ss,e("a",ns,[ts,n(t)]),os]),as,is,e("ul",null,[e("li",null,[e("p",null,[n(i,{to:"/"},{default:d(()=>[rs]),_:1})])]),e("li",null,[e("p",null,[e("a",ls,[cs,n(t)]),ds])]),e("li",null,[e("p",null,[us,e("a",ps,[bs,n(t)])])])])])}const ms=r(u,[["render",hs],["__file","81.html.vue"]]);export{ms as default};

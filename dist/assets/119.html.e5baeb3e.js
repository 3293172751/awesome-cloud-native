import{_ as e,o,c as r,d as a}from"./app.df617644.js";const n={},t=a('<h1 id="_119-optimization-and-refactoring-of-docker-and-docker-compose-network-modes" tabindex="-1"><a class="header-anchor" href="#_119-optimization-and-refactoring-of-docker-and-docker-compose-network-modes" aria-hidden="true">#</a> 119: Optimization and Refactoring of Docker and Docker Compose Network Modes</h1><p><strong>Description:</strong></p><h4 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> Background:</h4><p>Our current Docker and Docker Compose setups use a bridge network mode. However, there&#39;s a need to optimize and refactor the network modes for better scalability, maintainability, and performance.</p><h4 id="issue" tabindex="-1"><a class="header-anchor" href="#issue" aria-hidden="true">#</a> Issue:</h4><p>Based on our existing <code>docker-compose.yml</code> file (see attached), there are areas that can be potentially improved in terms of networking:</p><ol><li><strong>Use of Bridge Mode:</strong> While bridge mode is a default and often suitable for many applications, there might be scenarios where host or overlay networking modes may offer better performance or more suitable isolation.</li><li><strong>Network Addressing:</strong> Hardcoding IP addresses (e.g., <code>${MYSQL_NETWORK_ADDRESS}</code>, <code>${MONGO_NETWORK_ADDRESS}</code>, etc.) may not be scalable. We need a more dynamic way of handling this.</li><li><strong>Dependency Management:</strong> While <code>depends_on</code> is used, we might want to look into the use of <code>wait-for-it</code> or similar scripts to ensure services are fully up and ready before dependants start.</li><li><strong>Consistency:</strong> Ensure that the network configurations are consistent across all services. For instance, all services should be part of the necessary networks, and network mode should be uniform unless there&#39;s a valid reason for deviations.</li></ol><h4 id="proposed-action" tabindex="-1"><a class="header-anchor" href="#proposed-action" aria-hidden="true">#</a> Proposed Action:</h4><ol><li>Evaluate the current bridge mode against our application&#39;s needs. Consider if host, overlay, or macvlan modes might be more appropriate.</li><li>Investigate using Docker&#39;s native DNS for service discovery rather than hardcoding IP addresses.</li><li>Implement <code>wait-for-it</code> or similar scripts for better management of service dependencies.</li><li>Ensure all services have consistent network configurations, including necessary settings for IPv4 and IPv6 (if applicable).</li><li>Update and refactor the <code>docker-compose.yml</code> file based on the findings and proposed changes.</li></ol>',9),i=[t];function s(d,c){return o(),r("div",null,i)}const h=e(n,[["render",s],["__file","119.html.vue"]]);export{h as default};

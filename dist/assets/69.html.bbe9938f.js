import{_ as l,r as t,o,c,a as n,b as s,w as r,e,d as p}from"./app.f3292bfc.js";const d={},u={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},m=e("author"),v=n("h1",{id:"\u7B2C69\u8282-deltafifo-\u539F\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C69\u8282-deltafifo-\u539F\u7406","aria-hidden":"true"},"#"),e(" \u7B2C69\u8282 DeltaFIFO \u539F\u7406")],-1),k=n("div",null,[n("a",{href:"68.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),n("a",{href:"70.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),h=n("br",null,null,-1),b=e("\u2764\uFE0F\u{1F495}\u{1F495}\u65B0\u65F6\u4EE3\u62E5\u62B1\u4E91\u539F\u751F\uFF0C\u4E91\u539F\u751F\u5177\u6709\u73AF\u5883\u7EDF\u4E00\u3001\u6309\u9700\u4ED8\u8D39\u3001\u5373\u5F00\u5373\u7528\u3001\u7A33\u5B9A\u6027\u5F3A\u7279\u70B9\u3002Myblog:"),f={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},y=e("http://nsddd.top"),g=p(`<hr><p>[TOC]</p><h2 id="\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h2><p>okkey \u6211\u4EEC\u77E5\u9053\uFF0C\u518D\u4E0A\u4E00\u4E2A Reflector \u4ECE API Server \u76D1\u542C\uFF08watch\uFF09\u7279\u5B9A\u7C7B\u578B\u7684\u8D44\u6E90\uFF0C\u62FF\u5230\u53D8\u66F4\u901A\u77E5\u540E\uFF0C\u5C06\u5176\u653E\u5165\u5230 DeltaFIFO \u961F\u5217\u4E2D\u3002</p><p><strong>DeltaFIFO \u662F Kubernetes \u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B58\u50A8\u3002</strong></p><p>\u4E0D\u4EC5\u4EC5\u662F DeltaFIFO \uFF0C Kubernetes \u8FD8\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u5F88\u591A\u5B58\u50A8</p><h2 id="kubernetes-\u63D0\u4F9B\u7684\u5B58\u50A8" tabindex="-1"><a class="header-anchor" href="#kubernetes-\u63D0\u4F9B\u7684\u5B58\u50A8" aria-hidden="true">#</a> Kubernetes \u63D0\u4F9B\u7684\u5B58\u50A8</h2><p>cache \u4E3B\u8981\u5B9E\u73B0\u4E86 Store\uFF0C\u5229\u7528\u4E86 <code>threadSafeMap</code> \u5B58\u653E\u6570\u636E</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">type</span> Store interface <span class="token punctuation">{</span>

	// Add adds the given object to the accumulator associated with the given object<span class="token string">&#39;s key
	Add(obj interface{}) error

	// Update updates the given object in the accumulator associated with the given object&#39;</span>s key
	Update<span class="token punctuation">(</span>obj interface<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> error

	// Delete deletes the given object from the accumulator associated with the given object<span class="token string">&#39;s key
	Delete(obj interface{}) error

	// List returns a list of all the currently non-empty accumulators
	List() []interface{}

	// ListKeys returns a list of all the keys currently associated with non-empty accumulators
	ListKeys() []string

	// Get returns the accumulator associated with the given object&#39;</span>s key
	Get<span class="token punctuation">(</span>obj interface<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>item interface<span class="token punctuation">{</span><span class="token punctuation">}</span>, exists bool, err error<span class="token punctuation">)</span>

	// GetByKey returns the accumulator associated with the given key
	GetByKey<span class="token punctuation">(</span>key string<span class="token punctuation">)</span> <span class="token punctuation">(</span>item interface<span class="token punctuation">{</span><span class="token punctuation">}</span>, exists bool, err error<span class="token punctuation">)</span>

	// Replace will delete the contents of the store, using instead the
	// given list. Store takes ownership of the list, you should not reference
	// it after calling this function.
	Replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>interface<span class="token punctuation">{</span><span class="token punctuation">}</span>, string<span class="token punctuation">)</span> error

	// Resync is meaningless <span class="token keyword">in</span> the terms appearing here but has
	// meaning <span class="token keyword">in</span> some implementations that have non-trivial
	// additional behavior <span class="token punctuation">(</span>e.g., DeltaFIFO<span class="token punctuation">)</span>.
	Resync<span class="token punctuation">(</span><span class="token punctuation">)</span> error
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u{1F4DC} \u5BF9\u4E0A\u9762\u7684\u89E3\u91CA\uFF1A</strong></p><ul><li><code>Add(obj interface{}) error</code>: \u5C06\u7ED9\u5B9A\u5BF9\u8C61\u6DFB\u52A0\u5230\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D</li><li><code>Update(obj interface{}) error</code>: \u66F4\u65B0\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u7684\u7ED9\u5B9A\u5BF9\u8C61</li><li><code>Delete(obj interface{}) error</code>: \u4ECE\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u5220\u9664\u7ED9\u5B9A\u5BF9\u8C61</li><li><code>List() []interface{}</code>: \u8FD4\u56DE\u6240\u6709\u5F53\u524D\u975E\u7A7A\u7D2F\u52A0\u5668\u7684\u5217\u8868</li><li><code>ListKeys() []string</code>: \u8FD4\u56DE\u5F53\u524D\u4E0E\u975E\u7A7A\u7D2F\u52A0\u5668\u5173\u8054\u7684\u6240\u6709\u952E\u7684\u5217\u8868</li><li><code>Get(obj interface{}) (item interface{}, exists bool, err error)</code>: \u8FD4\u56DE\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u7684\u7D2F\u52A0\u5668</li><li><code>GetByKey(key string) (item interface{}, exists bool, err error)</code>: \u8FD4\u56DE\u4E0E\u7ED9\u5B9A\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668</li><li><code>Replace([]interface{}, string) error</code>: \u5220\u9664\u5B58\u50A8\u4E2D\u7684\u5185\u5BB9\uFF0C\u4F7F\u7528\u7ED9\u5B9A\u7684\u5217\u8868\u66FF\u6362\u3002Store \u83B7\u53D6\u8BE5\u5217\u8868\u7684\u6240\u6709\u6743\uFF0C\u8C03\u7528\u6B64\u51FD\u6570\u540E\u4E0D\u5E94\u518D\u5F15\u7528\u8BE5\u5217\u8868\u3002</li><li><code>Resync() error</code>: \u5728\u6B64\u5904\u51FA\u73B0\u7684\u672F\u8BED\u4E2D\u6BEB\u65E0\u610F\u4E49\uFF0C\u4F46\u5728\u67D0\u4E9B\u5177\u6709\u975E\u5E73\u51E1\u9644\u52A0\u884C\u4E3A\uFF08\u4F8B\u5982 DeltaFIFO\uFF09\u7684\u5B9E\u73B0\u4E2D\u5177\u6709\u610F\u4E49\u3002</li></ul><p><strong>\u5206\u7C7B\uFF1A</strong></p><ul><li><code>Add(obj interface{}) error</code><ul><li>\u529F\u80FD\uFF1A\u5C06\u7ED9\u5B9A\u5BF9\u8C61\u6DFB\u52A0\u5230\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D</li><li>\u53C2\u6570\uFF1A <ul><li>obj\uFF1A\u8981\u6DFB\u52A0\u7684\u5BF9\u8C61</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A\u65E0</li></ul></li><li><code>Update(obj interface{}) error</code><ul><li>\u529F\u80FD\uFF1A\u66F4\u65B0\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u7684\u7ED9\u5B9A\u5BF9\u8C61</li><li>\u53C2\u6570\uFF1A <ul><li>obj\uFF1A\u8981\u66F4\u65B0\u7684\u5BF9\u8C61</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A\u65E0</li></ul></li><li><code>Delete(obj interface{}) error</code><ul><li>\u529F\u80FD\uFF1A\u4ECE\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u5220\u9664\u7ED9\u5B9A\u5BF9\u8C61</li><li>\u53C2\u6570\uFF1A <ul><li>obj\uFF1A\u8981\u5220\u9664\u7684\u5BF9\u8C61</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A\u65E0</li></ul></li><li><code>List() []interface{}</code><ul><li>\u529F\u80FD\uFF1A\u8FD4\u56DE\u6240\u6709\u5F53\u524D\u975E\u7A7A\u7D2F\u52A0\u5668\u7684\u5217\u8868</li><li>\u53C2\u6570\uFF1A\u65E0</li><li>\u8FD4\u56DE\u503C\uFF1A\u6240\u6709\u5F53\u524D\u975E\u7A7A\u7D2F\u52A0\u5668\u7684\u5217\u8868</li></ul></li><li><code>ListKeys() []string</code><ul><li>\u529F\u80FD\uFF1A\u8FD4\u56DE\u5F53\u524D\u4E0E\u975E\u7A7A\u7D2F\u52A0\u5668\u5173\u8054\u7684\u6240\u6709\u952E\u7684\u5217\u8868</li><li>\u53C2\u6570\uFF1A\u65E0</li><li>\u8FD4\u56DE\u503C\uFF1A\u5F53\u524D\u4E0E\u975E\u7A7A\u7D2F\u52A0\u5668\u5173\u8054\u7684\u6240\u6709\u952E\u7684\u5217\u8868</li></ul></li><li><code>Get(obj interface{}) (item interface{}, exists bool, err error)</code><ul><li>\u529F\u80FD\uFF1A\u8FD4\u56DE\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u7684\u7D2F\u52A0\u5668</li><li>\u53C2\u6570\uFF1A <ul><li>obj\uFF1A\u8981\u83B7\u53D6\u7684\u5BF9\u8C61</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A <ul><li>item\uFF1A\u4E0E\u7ED9\u5B9A\u5BF9\u8C61\u7684\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668\u4E2D\u7684\u7D2F\u52A0\u5668</li><li>exists\uFF1A\u662F\u5426\u5B58\u5728\u8BE5\u7D2F\u52A0\u5668</li><li>err\uFF1A\u9519\u8BEF\u4FE1\u606F\uFF08\u5982\u679C\u6709\uFF09</li></ul></li></ul></li><li><code>GetByKey(key string) (item interface{}, exists bool, err error)</code><ul><li>\u529F\u80FD\uFF1A\u8FD4\u56DE\u4E0E\u7ED9\u5B9A\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668</li><li>\u53C2\u6570\uFF1A <ul><li>key\uFF1A\u8981\u83B7\u53D6\u7684\u952E</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A <ul><li>item\uFF1A\u4E0E\u7ED9\u5B9A\u952E\u76F8\u5173\u8054\u7684\u7D2F\u52A0\u5668</li><li>exists\uFF1A\u662F\u5426\u5B58\u5728\u8BE5\u7D2F\u52A0\u5668</li><li>err\uFF1A\u9519\u8BEF\u4FE1\u606F\uFF08\u5982\u679C\u6709\uFF09</li></ul></li></ul></li><li><code>Replace([]interface{}, string) error</code><ul><li>\u529F\u80FD\uFF1A\u5220\u9664\u5B58\u50A8\u4E2D\u7684\u5185\u5BB9\uFF0C\u4F7F\u7528\u7ED9\u5B9A\u7684\u5217\u8868\u66FF\u6362\u3002Store \u83B7\u53D6\u8BE5\u5217\u8868\u7684\u6240\u6709\u6743\uFF0C\u8C03\u7528\u6B64\u51FD\u6570\u540E\u4E0D\u5E94\u518D\u5F15\u7528\u8BE5\u5217\u8868\u3002</li><li>\u53C2\u6570\uFF1A <ul><li>[]interface{}\uFF1A\u8981\u66FF\u6362\u7684\u5217\u8868</li><li>string\uFF1A\u7528\u4E8E\u8BB0\u5F55\u65E5\u5FD7\u7684\u5B57\u7B26\u4E32</li></ul></li><li>\u8FD4\u56DE\u503C\uFF1A\u9519\u8BEF\u4FE1\u606F\uFF08\u5982\u679C\u6709\uFF09</li></ul></li><li><code>Resync() error</code><ul><li>\u529F\u80FD\uFF1A\u5728\u6B64\u5904\u51FA\u73B0\u7684\u672F\u8BED\u4E2D\u6BEB\u65E0\u610F\u4E49\uFF0C\u4F46\u5728\u67D0\u4E9B\u5177\u6709\u975E\u5E73\u51E1\u9644\u52A0\u884C\u4E3A\uFF08\u4F8B\u5982 DeltaFIFO\uFF09\u7684\u5B9E\u73B0\u4E2D\u5177\u6709\u610F\u4E49\u3002</li><li>\u53C2\u6570\uFF1A\u65E0</li><li>\u8FD4\u56DE\u503C\uFF1A\u9519\u8BEF\u4FE1\u606F\uFF08\u5982\u679C\u6709\uFF09</li></ul></li></ul><h3 id="undeltastore" tabindex="-1"><a class="header-anchor" href="#undeltastore" aria-hidden="true">#</a> UndeltaStore</h3><p>\u5B9E\u73B0\u4E86 <code>Store</code> \uFF0C\u5229\u7528\u4E86 cache \u5B58\u653E\u6570\u636E\uFF0C\u6570\u636E\u53D8\u66F4\u7684\u65F6\u5019\u901A\u8FC7 PushFunc \u53D1\u9001\u5F53\u524D\u5B8C\u6574\u7684\u72B6\u6001\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> UndeltaStore <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Store
	PushFunc <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>UndeltaStore</code> \u7ED3\u6784\u4F53\u5D4C\u5957\u4E86\u4E00\u4E2A\u63A5\u53E3\uFF0C\u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\u5C06\u63A5\u53E3\u7684\u65B9\u6CD5\u4F5C\u4E3A\u7ED3\u6784\u4F53\u7684\u4E00\u90E8\u5206\uFF0C\u4EE5\u4FBF\u66F4\u65B9\u4FBF\u5730\u8BBF\u95EE\u63A5\u53E3\u7684\u65B9\u6CD5\u3002</p><p>\u6BD4\u5982\u8BF4 Add:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>UndeltaStore<span class="token punctuation">)</span> <span class="token function">Add</span><span class="token punctuation">(</span>obj <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> u<span class="token punctuation">.</span>Store<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> err
	<span class="token punctuation">}</span>
	u<span class="token punctuation">.</span><span class="token function">PushFunc</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>Store<span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="heap" tabindex="-1"><a class="header-anchor" href="#heap" aria-hidden="true">#</a> Heap</h3><p>Heap \u901A\u8FC7\u5B9E\u73B0 Store\uFF0C\u5229\u7528 data \u6570\u636E\u7ED3\u6784\u5B58\u653E\u6570\u636E\uFF0C\u5B9E\u73B0\u5806\u6570\u636E\u7ED3\u6784\uFF0C\u7528\u4E8E\u4F18\u5148\u7EA7\u961F\u5217\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// heapData is an internal struct that implements the standard heap interface</span>
<span class="token comment">// and keeps the data stored in the heap.</span>
<span class="token keyword">type</span> heapData <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// items is a map from key of the objects to the objects and their index.</span>
	<span class="token comment">// We depend on the property that items in the map are in the queue and vice versa.</span>
	items <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>heapItem
	<span class="token comment">// queue implements a heap data structure and keeps the order of elements</span>
	<span class="token comment">// according to the heap invariant. The queue keeps the keys of objects stored</span>
	<span class="token comment">// in &quot;items&quot;.</span>
	queue <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>

	<span class="token comment">// keyFunc is used to make the key used for queued item insertion and retrieval, and</span>
	<span class="token comment">// should be deterministic.</span>
	keyFunc KeyFunc
	<span class="token comment">// lessFunc is used to compare two objects in the heap.</span>
	lessFunc LessFunc
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fifo" tabindex="-1"><a class="header-anchor" href="#fifo" aria-hidden="true">#</a> FIFO</h3><p>FIFO \u5B9E\u73B0\u4E86 Queue \uFF08\u5305\u542B Store)\uFF0C\u5229\u7528\u81EA\u5DF1\u5185\u90E8\u7684 Items \u6570\u636E\u7ED3\u6784\u5B58\u653E\u6570\u636E\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Queue extends Store with a collection of Store keys to &quot;process&quot;.</span>
<span class="token comment">// Every Add, Update, or Delete may put the object&#39;s key in that collection.</span>
<span class="token comment">// A Queue has a way to derive the corresponding key given an accumulator.</span>
<span class="token comment">// A Queue can be accessed concurrently from multiple goroutines.</span>
<span class="token comment">// A Queue can be &quot;closed&quot;, after which Pop operations return an error.</span>
<span class="token keyword">type</span> Queue <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	Store

	<span class="token comment">// Pop blocks until there is at least one key to process or the</span>
	<span class="token comment">// Queue is closed.  In the latter case Pop returns with an error.</span>
	<span class="token comment">// In the former case Pop atomically picks one key to process,</span>
	<span class="token comment">// removes that (key, accumulator) association from the Store, and</span>
	<span class="token comment">// processes the accumulator.  Pop returns the accumulator that</span>
	<span class="token comment">// was processed and the result of processing.  The PopProcessFunc</span>
	<span class="token comment">// may return an ErrRequeue{inner} and in this case Pop will (a)</span>
	<span class="token comment">// return that (key, accumulator) association to the Queue as part</span>
	<span class="token comment">// of the atomic processing and (b) return the inner error from</span>
	<span class="token comment">// Pop.</span>
	<span class="token function">Pop</span><span class="token punctuation">(</span>PopProcessFunc<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>

	<span class="token comment">// AddIfNotPresent puts the given accumulator into the Queue (in</span>
	<span class="token comment">// association with the accumulator&#39;s key) if and only if that key</span>
	<span class="token comment">// is not already associated with a non-empty accumulator.</span>
	<span class="token function">AddIfNotPresent</span><span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span>

	<span class="token comment">// HasSynced returns true if the first batch of keys have all been</span>
	<span class="token comment">// popped.  The first batch of keys are those of the first Replace</span>
	<span class="token comment">// operation if that happened before any Add, AddIfNotPresent,</span>
	<span class="token comment">// Update, or Delete; otherwise the first batch is empty.</span>
	<span class="token function">HasSynced</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>

	<span class="token comment">// Close the queue</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="deltafifo" tabindex="-1"><a class="header-anchor" href="#deltafifo" aria-hidden="true">#</a> DeltaFIFO</h2><p>\u63A5\u4E0B\u6765\u5C31\u662F\u91CD\u70B9 DeltaFIFO \u7684\u90E8\u5206\u4E86</p><h3 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F</h3><p><strong>DeltaFIFO \u7684\u4E3B\u8981\u5E94\u7528\u573A\u666F\u5982\u4E0B\uFF1A</strong></p><ul><li>\u5F53\u4F60\u5E0C\u671B\u5904\u7406\u6BCF\u4E00\u4E2A\u5BF9\u8C61\u7684\u53D8\u5316\u6700\u591A\u4E00\u6B21</li><li>\u5F53\u4F60\u5904\u7406\u4E00\u4E2A\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u5E0C\u671B\u77E5\u9053\u8FD9\u4E2A\u5BF9\u8C61\u4E0E\u4F60\u4E0A\u4E00\u6B21\u5904\u7406\u65F6\uFF0C\u53D1\u751F\u4E86\u54EA\u4E9B\u53D8\u5316\u3002</li><li>\u5F53\u4F60\u5E0C\u671B\u4E00\u4E2A\u5BF9\u8C61\u5220\u9664\u7684\u65F6\u5019\uFF0C\u4F60\u4ECD\u7136\u80FD\u591F\u5904\u7406\u5B83</li><li>\u80FD\u591F\u5468\u671F\u6027\u7684\u5904\u7406\u6240\u6709\u7684\u5BF9\u8C61</li></ul><p><strong>\u7ED3\u6784\u4F53\uFF1A</strong></p><p><code>DeltaFIFO</code>\u662FK8s\u4E2D\u7528\u6765\u5B58\u50A8\u5904\u7406\u6570\u636E\u7684<code>Queue</code>\uFF0C\u76F8\u8F83\u4E8E\u4F20\u7EDF\u7684<code>FIFO</code>\uFF0C\u5B83\u4E0D\u4EC5\u4EC5\u5B58\u50A8\u4E86\u6570\u636E\u4FDD\u8BC1\u4E86\u5148\u8FDB\u5148\u51FA\uFF0C\u800C\u4E14\u5B58\u50A8\u6709K8s \u8D44\u6E90\u5BF9\u8C61\u7684\u7C7B\u578B\u3002\u5176\u662F\u8FDE\u63A5<code>Reflector</code>(\u751F\u4EA7\u8005)\u548C<code>indexer</code>(\u6D88\u8D39\u8005)\u7684\u91CD\u8981\u901A\u9053\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> DeltaFIFO <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// lock/cond protects access to &#39;items&#39; and &#39;queue&#39;.</span>
	lock sync<span class="token punctuation">.</span>RWMutex
	cond sync<span class="token punctuation">.</span>Cond

	<span class="token comment">// \`items\` maps a key to a Deltas.</span>
	<span class="token comment">// Each such Deltas has at least one Delta.</span>
	items <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span>Deltas

	<span class="token comment">// \`queue\` maintains FIFO order of keys for consumption in Pop().</span>
	<span class="token comment">// There are no duplicates in \`queue\`.</span>
	<span class="token comment">// A key is in \`queue\` if and only if it is in \`items\`.</span>
	queue <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>

	<span class="token comment">// populated is true if the first batch of items inserted by Replace() has been populated</span>
	<span class="token comment">// or Delete/Add/Update/AddIfNotPresent was called first.</span>
	populated <span class="token builtin">bool</span>
	<span class="token comment">// initialPopulationCount is the number of items inserted by the first call of Replace()</span>
	initialPopulationCount <span class="token builtin">int</span>

	<span class="token comment">// keyFunc is used to make the key used for queued item</span>
	<span class="token comment">// insertion and retrieval, and should be deterministic.</span>
	keyFunc KeyFunc

	<span class="token comment">// knownObjects list keys that are &quot;known&quot; --- affecting Delete(),</span>
	<span class="token comment">// Replace(), and Resync()</span>
	knownObjects KeyListerGetter

	<span class="token comment">// Used to indicate a queue is closed so a control loop can exit when a queue is empty.</span>
	<span class="token comment">// Currently, not used to gate any of CRUD operations.</span>
	closed <span class="token builtin">bool</span>

	<span class="token comment">// emitDeltaTypeReplaced is whether to emit the Replaced or Sync</span>
	<span class="token comment">// DeltaType when Replace() is called (to preserve backwards compat).</span>
	emitDeltaTypeReplaced <span class="token builtin">bool</span>

	<span class="token comment">// Called with every object if non-nil.</span>
	transformer TransformFunc
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u{1F4DC} \u5BF9\u4E0A\u9762\u7684\u89E3\u91CA\uFF1A</p><ul><li><code>items</code> \u662F\u8BA1\u7B97\u7684 key\uFF0Cvalue \u662F\u4E00\u4E2A Deltas \u7684\u7ED3\u6784\u4F53\uFF0C</li><li><code>queue</code>\uFF1A\u4FDD\u8BC1\u8FD9\u4E2A\u961F\u5217\u7684\u987A\u5E8F\u6027</li><li><code>keyFunc</code>\uFF1A\u6211\u4EEC\u9ED8\u8BA4\u4F7F\u7528 <code>&lt;namespce&gt;/&lt;name&gt;</code> \u4E0D\u6307\u5B9A namespace \u65F6\u5019\u7528 <code>&lt;name&gt;</code></li><li><code>knownObjects</code> : \u4E13\u95E8\u7528\u6765\u5B58\u653E\u6570\u636E\u7684\u5730\u65B9\uFF0C\u5176\u5B9E\u5C31\u662F <code>Indexer</code></li></ul><h2 id="\u4E8B\u4EF6\u7684\u751F\u4EA7\u548C\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u7684\u751F\u4EA7\u548C\u6D88\u8D39" aria-hidden="true">#</a> \u4E8B\u4EF6\u7684\u751F\u4EA7\u548C\u6D88\u8D39</h2><p>\u4F5C\u4E3A\u4E00\u4E2A\u4E2D\u95F4\u7BA1\u9053\u7684\u4F5C\u7528\uFF0C\u5BF9\u5E94\u7684\u4E00\u8FB9\u5C31\u662F\u751F\u4EA7\u8005\uFF0C\u4E00\u904D\u5C31\u662F\u6D88\u8D39\u8005\u3002</p><h3 id="\u751F\u4EA7" tabindex="-1"><a class="header-anchor" href="#\u751F\u4EA7" aria-hidden="true">#</a> \u751F\u4EA7</h3><ul><li>Reflector \u7684 List</li><li>Reflector \u7684 Watch</li><li>Reflector \u7684 Resync</li></ul><h3 id="\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u6D88\u8D39" aria-hidden="true">#</a> \u6D88\u8D39</h3><ul><li>\u4E8B\u4EF6\u6D3E\u53D1\u5230 work queue</li><li>\u5237\u65B0\u672C\u5730\u7F13\u5B58</li></ul><h2 id="indexer" tabindex="-1"><a class="header-anchor" href="#indexer" aria-hidden="true">#</a> Indexer</h2><p>Indexer \u4E3B\u8981\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5BF9\u8C61\u6839\u636E\u4E00\u5B9A\u68C0\u7D22\u80FD\u529B\uFF0C\u5178\u578B\u7684\u5B9E\u73B0\u5C31\u662F\u901A\u8FC7 namespace \u6765\u6784\u5EFA Key\uFF0C\u901A\u8FC7 Thread Safe Store \u6765\u5B58\u50A8\u5BF9\u8C61\u3002</p><h2 id="end-\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#end-\u94FE\u63A5" aria-hidden="true">#</a> END \u94FE\u63A5</h2><ul><li><div><a href="68.md" style="float:left;">\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} </a><a href="70.md" style="float:right;"> \uFE0F\u4E0B\u4E00\u8282\u{1F517}</a></div></li></ul>`,45),w=e("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),_={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},F=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),x=e(")"),j=e("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),D={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},I=e("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function R(S,q){const a=t("ExternalLinkIcon"),i=t("RouterLink");return o(),c("div",null,[n("ul",null,[n("li",null,[n("a",u,[m,s(a)])])]),v,k,h,n("blockquote",null,[n("p",null,[b,n("a",f,[y,s(a)])])]),g,n("ul",null,[n("li",null,[n("p",null,[s(i,{to:"/"},{default:r(()=>[w]),_:1})])]),n("li",null,[n("p",null,[n("a",_,[F,s(a)]),x])]),n("li",null,[n("p",null,[j,n("a",D,[I,s(a)])])])])])}const P=l(d,[["render",R],["__file","69.html.vue"]]);export{P as default};

import{_ as l,r as o,o as c,c as u,a as n,b as a,w as i,e as s,d as p}from"./app.a634a71f.js";const r={},d={href:"http://nsddd.top",target:"_blank",rel:"noopener noreferrer"},h=s("author"),k=n("h1",{id:"\u7B2C49\u8282-\u5728-sealos-\u4E0A\u5F00\u53D1\u4E00\u6B3E-ai-\u81EA\u52A8\u4E91\u539F\u751F\u5316\u9879\u76EE\u81EA\u52A8\u4E0A\u7EBF\u5DE5\u5177",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C49\u8282-\u5728-sealos-\u4E0A\u5F00\u53D1\u4E00\u6B3E-ai-\u81EA\u52A8\u4E91\u539F\u751F\u5316\u9879\u76EE\u81EA\u52A8\u4E0A\u7EBF\u5DE5\u5177","aria-hidden":"true"},"#"),s(" \u7B2C49\u8282 \u5728 Sealos \u4E0A\u5F00\u53D1\u4E00\u6B3E AI \u81EA\u52A8\u4E91\u539F\u751F\u5316\u9879\u76EE\u81EA\u52A8\u4E0A\u7EBF\u5DE5\u5177")],-1),v=n("div",null,[n("a",{href:"48.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),n("a",{href:"50.md",style:{float:"right"}}," \u2B07\uFE0F\u4E0B\u4E00\u8282\u{1F517}")],-1),g=n("br",null,null,-1),m=s("\u2764\uFE0F\u{1F495}\u{1F495}\u8BB0\u5F55"),b={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},_=s("sealos"),f=s("\u5F00\u6E90\u9879\u76EE\u7684\u5B66\u4E60\u8FC7\u7A0B\u3002"),x={href:"https://github.com/cubxxw/sealos",target:"_blank",rel:"noopener noreferrer"},y=s("k8s,docker\u548C\u4E91\u539F\u751F\u7684\u5B66\u4E60"),A=s("\u3002Myblog:"),q={href:"http://nsddd.top/",target:"_blank",rel:"noopener noreferrer"},I=s("http://nsddd.top"),P=n("hr",null,null,-1),w=n("p",null,"[TOC]",-1),C=n("h2",{id:"\u4ECB\u7ECD",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4ECB\u7ECD","aria-hidden":"true"},"#"),s(" \u4ECB\u7ECD")],-1),G={href:"https://summer-ospp.ac.cn/org/prodetail/23ab80139?lang=zh&list=pro",target:"_blank",rel:"noopener noreferrer"},E=s("\u9879\u76EE\u4E3B\u9875"),K={href:"https://github.com/labring/sealos",target:"_blank",rel:"noopener noreferrer"},T=s("GitHub \u5730\u5740"),D=p('<h3 id="\u6280\u672F\u9886\u57DF" tabindex="-1"><a class="header-anchor" href="#\u6280\u672F\u9886\u57DF" aria-hidden="true">#</a> \u6280\u672F\u9886\u57DF\uFF1A</h3><p>\u719F\u6089 golang\u3001Docker\u3001kubernetes \u7B49\u6280\u672F\uFF0C\u4E86\u89E3 chatGPT\u3001autoGPT \u7B49AI\u6280\u672F\u7684\u4F7F\u7528</p><h3 id="\u5F00\u6E90\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u5F00\u6E90\u534F\u8BAE" aria-hidden="true">#</a> \u5F00\u6E90\u534F\u8BAE\uFF1A</h3><ul><li>apache-2</li></ul><h3 id="\u9879\u76EE\u7B80\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9879\u76EE\u7B80\u8FF0" aria-hidden="true">#</a> \u9879\u76EE\u7B80\u8FF0\uFF1A</h3><p><strong>\u9879\u76EE\u80CC\u666F:</strong></p><p>\u4E0D\u8BBA\u61C2\u4E0D\u61C2\u4E91\u539F\u751F\uFF0C\u5199 Dockerfile \u4EE5\u53CA yaml \u6587\u4EF6\u90FD\u662F\u4E00\u4EF6\u975E\u5E38\u75DB\u82E6\u7684\u4E8B\uFF0C\u5982\u679C AI \u80FD\u81EA\u52A8\u5E2E\u6211\u4EEC\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u5C06\u4F1A\u4EF7\u503C\u5DE8\u5927\u3002</p><p><strong>\u9879\u76EE\u63CF\u8FF0:</strong></p><p>\u8F93\u5165\u4E00\u4E2A\u4EFB\u610F\u7684 github \u4ED3\u5E93\u5730\u5740\uFF0C\u901A\u8FC7 AI \u80FD\u529B\u81EA\u52A8\u4E3A\u5176\u751F\u6210 Dockerfile \u548C kubernetes \u7F16\u6392\u914D\u7F6E\u6587\u4EF6\uFF0C\u5E76\u81EA\u52A8\u5728 sealos \u4E0A\u8FD0\u884C\u3002</p><p>AI \u751F\u6210\u7684\u4E0D\u4E00\u5B9A\u7B2C\u4E00\u6B21\u5C31\u80FD\u751F\u6210\u975E\u5E38\u51C6\u786E\u7684\u914D\u7F6E\uFF0C\u9996\u5148\u9700\u8981\u53EF\u4EE5\u628A\u81EA\u52A8\u6784\u5EFA\u7684\u9519\u8BEF\u4FE1\u606F\u8FD4\u56DE\u7ED9 AI \u5E76\u8BA9 AI \u81EA\u52A8\u4FEE\u590D\uFF0C\u4E5F\u9700\u8981\u4EBA\u7ED9 AI \u4E00\u4E9B\u53CD\u9988\u4FE1\u606F\u628A\u6CA1\u6709\u671F\u671B\u53D1\u751F\u7684\u73B0\u8C61\u53CD\u9988\u7ED9 AI \u8BA9 AI \u6765\u8C03\u6574\u3002</p><p>\u6700\u7EC8\u628A\u751F\u6210\u7684\u5185\u5BB9 PR \u56DE\u4ED3\u5E93\uFF0C\u540E\u7EED\u5C31\u53EF\u4EE5\u5B9E\u73B0\u5B8C\u5168\u81EA\u52A8\u5316\u4E0A\u7EBF\u4E86\u3002</p><h2 id="\u4EA7\u51FA\u8981\u6C42" tabindex="-1"><a class="header-anchor" href="#\u4EA7\u51FA\u8981\u6C42" aria-hidden="true">#</a> \u4EA7\u51FA\u8981\u6C42</h2><ol><li>\u6E90\u4EE3\u7801\uFF0C\u6280\u672F\u6587\u6863\uFF0C\u7EBF\u4E0A\u670D\u52A1\u4EE5\u53CA\u6D4B\u8BD5\u62A5\u544A</li><li>\u63D0\u4F9B\u80FD\u529B\u7684\u6E90\u7801\u4E0E\u6587\u6863\u5E76\u5408\u5E76\u5230\u4E3B\u4ED3\u5E93</li><li>\u529F\u80FD\u53EF\u4EE5\u6B63\u5E38\u5728 sealos \u4E0A\u7EBF\u5E76\u8FD0\u884C</li><li>\u63D0\u4F9B\u6D4B\u8BD5\u62A5\u544A</li></ol><h2 id="\u4EC0\u4E48\u662F-auto-gpt" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F-auto-gpt" aria-hidden="true">#</a> \u4EC0\u4E48\u662F Auto-GPT</h2>',14),N=s("\u8BE6\u7EC6\u4ECB\u7ECD"),R=p(`<h2 id="go-gpt3" tabindex="-1"><a class="header-anchor" href="#go-gpt3" aria-hidden="true">#</a> go-gpt3</h2><p>go-gpt3 \u662F\u4E00\u4E2A OpenAI GPT-3 API \u5BA2\u6237\u7AEF\uFF0C\u4F7F <code>Go/Golang</code> \u7A0B\u5E8F\u80FD\u591F\u4E0E <code>gpt3 API</code> \u8FDB\u884C\u4EA4\u4E92\u3002</p><p>\u652F\u6301\u4F7F\u7528\u5E26\u6216\u4E0D\u5E26\u6D41\u5F0F\u5904\u7406\u7684\u5B8C\u6210 API\u3002</p><h3 id="user" tabindex="-1"><a class="header-anchor" href="#user" aria-hidden="true">#</a> user</h3><p>\u8C03\u7528\u4E3B gpt-3 API \u7684\u7B80\u5355\u7528\u6CD5\uFF0C\u5B8C\u6210\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>client <span class="token operator">:=</span> gpt3<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">)</span>
resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Completion</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> gpt3<span class="token punctuation">.</span>CompletionRequest<span class="token punctuation">{</span>
    Prompt<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;2, 3, 5, 7, 11,&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Choices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text<span class="token punctuation">)</span>
<span class="token comment">// prints &quot; 13, 17, 19, 23, 29, 31&quot;, etc</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h3><p>\u5C1D\u8BD5\u8FD9\u4E9B\u793A\u4F8B\u4E2D\u7684\u4EFB\u4F55\u4E00\u79CD\uFF0C\u5C06\u5185\u5BB9\u653E\u5165 <code>main.go</code> \u5E76\u8FD0\u884C <code>go run main.go</code> \u3002\u6211\u5EFA\u8BAE\u4F7F\u7528 go \u6A21\u5757\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u60A8\u8FD8\u9700\u8981\u5728\u6D4B\u8BD5\u5B58\u50A8\u5E93\u4E2D\u8FD0\u884C <code>go mod init</code> \u3002\u6216\u8005\uFF0C\u60A8\u53EF\u4EE5\u514B\u9686\u6B64\u5B58\u50A8\u5E93\u5E76\u4F7F\u7528 <code>go run cmd/test/main.go</code> \u8FD0\u884C\u6D4B\u8BD5\u811A\u672C\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u77E5\u9053\uFF0C\u6211\u4EEC\u5982\u679C\u5E0C\u671B\u8FD0\u884C chatgpt \uFF0C\u6211\u4EEC\u671F\u671B\u6709\u4E00\u4E2A API</p><p>\u8FD9\u662F\u548C AutoGPT \u4E00\u6837\u7684\uFF1A</p><p>\u5982\u4E0B\u6240\u793A\u7684 <code>.env</code> \u6587\u4EF6\u624D\u80FD\u4F7F\u7528\u8FD9\u4E9B\u793A\u4F8B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>API_KEY<span class="token operator">=</span><span class="token operator">&lt;</span>openAI API Key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u{1F4A1}\u7B80\u5355\u7684\u4E00\u4E2A\u6848\u4F8B\u5982\u4E0B\uFF1A</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;os&quot;</span>

	<span class="token string">&quot;github.com/PullRequestInc/go-gpt3&quot;</span>
	<span class="token string">&quot;github.com/joho/godotenv&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	godotenv<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	apiKey <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">&quot;API_KEY&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> apiKey <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span><span class="token string">&quot;Missing API KEY&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	client <span class="token operator">:=</span> gpt3<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>apiKey<span class="token punctuation">)</span>

	resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">Completion</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> gpt3<span class="token punctuation">.</span>CompletionRequest<span class="token punctuation">{</span>
		Prompt<span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;The first thing you should know about javascript is&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		MaxTokens<span class="token punctuation">:</span> gpt3<span class="token punctuation">.</span><span class="token function">IntPtr</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		Stop<span class="token punctuation">:</span>      <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		Echo<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Choices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Text<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7 <code>os.Getenv</code> \u83B7\u53D6\u5230\u73AF\u5883\u53D8\u91CF\u7684\u503C\uFF0C\u5176\u4E2D\u7684\u73AF\u5883\u53D8\u91CF\u4F7F\u7528\u7684\u662F <code>API_KEY</code> \u6765\u8FDB\u884C\u8BBE\u7F6E</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">API_KEY</span><span class="token operator">=</span><span class="token string">&quot;**********************************&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>I want Auto-GPT to: \u6839\u636Ehttps://github.com/go-gitea/gitea\u7684GitHub\u4ED3\u5E93\u5730\u5740\uFF0C\u751F\u6210\u53EF\u4EE5\u4F9B Kubernetes \u4F7F\u7528\u7684 yaml \u6587\u4EF6\u6216\u8005\u662F dockerfile \u4F7F\u7528\u7684 dockerfile \u6587\u4EF6\uFF0C\u751F\u6210yaml\u6587\u4EF6\u4FDD\u5B58\u672C\u5730\u540E\u9000\u51FA
GitOpsGPT  has been created with the following details:
Name:  GitOpsGPT
Role:  an AI agent that automates the process of generating Kubernetes yaml files or Dockerfiles from a given GitHub repository URL, and saves the generated files locally.
Goals: 
-  Analyze the repository and identify the appropriate language and framework used to generate the Dockerfile or Kubernetes yaml files.
-  Generate the Dockerfile or Kubernetes yaml files based on the identified language and framework, and ensure that they are compatible with the latest version of Kubernetes.
-  Optimize the generated files for performance, security, and scalability, and ensure that they adhere to best practices and industry standards.
-  Save the generated files to a specified location on the local machine and provide a confirmation message upon completion.
-  Continuously monitor the repository for any changes and update the generated files accordingly to ensure that they remain up-to-date and compatible with the latest version of Kubernetes.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u94FE\u63A5" aria-hidden="true">#</a> \u94FE\u63A5</h2>`,18),L={href:"https://github.com/sashabaranov/go-openai/",target:"_blank",rel:"noopener noreferrer"},Y=s("API"),B=n("h2",{id:"end-\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#end-\u94FE\u63A5","aria-hidden":"true"},"#"),s(" END \u94FE\u63A5")],-1),O=n("ul",null,[n("li",null,[n("div",null,[n("a",{href:"48.md",style:{float:"left"}},"\u2B06\uFE0F\u4E0A\u4E00\u8282\u{1F517} "),n("a",{href:"50.md",style:{float:"right"}}," \uFE0F\u4E0B\u4E00\u8282\u{1F517}")])])],-1),S=s("\u24C2\uFE0F\u56DE\u5230\u76EE\u5F55\u{1F3E0}"),z={href:"https://nsddd.top/archives/contributors",target:"_blank",rel:"noopener noreferrer"},V=n("strong",null,"\u{1FAF5}\u53C2\u4E0E\u8D21\u732E\u{1F49E}\u2764\uFE0F\u200D\u{1F525}\u{1F496}",-1),F=s(")"),H=s("\u2734\uFE0F\u7248\u6743\u58F0\u660E \xA9 \uFF1A\u672C\u4E66\u6240\u6709\u5185\u5BB9\u9075\u5FAA"),M={href:"http://zh.wikipedia.org/wiki/Wikipedia:CC-by-sa-3.0%E5%8D%8F%E8%AE%AE%E6%96%87%E6%9C%AC",target:"_blank",rel:"noopener noreferrer"},j=s("CC-BY-SA 3.0\u534F\u8BAE\uFF08\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB\uFF09\xA9");function U(W,J){const e=o("ExternalLinkIcon"),t=o("RouterLink");return c(),u("div",null,[n("ul",null,[n("li",null,[n("a",d,[h,a(e)])])]),k,v,g,n("blockquote",null,[n("p",null,[m,n("a",b,[_,a(e)]),f,n("a",x,[y,a(e)]),A,n("a",q,[I,a(e)])])]),P,w,C,n("ul",null,[n("li",null,[n("a",G,[E,a(e)])]),n("li",null,[n("a",K,[T,a(e)])])]),D,n("ul",null,[n("li",null,[a(t,{to:"/Cloud-Native/50.html"},{default:i(()=>[N]),_:1})])]),R,n("ul",null,[n("li",null,[n("a",L,[Y,a(e)])])]),B,O,n("ul",null,[n("li",null,[n("p",null,[a(t,{to:"/"},{default:i(()=>[S]),_:1})])]),n("li",null,[n("p",null,[n("a",z,[V,a(e)]),F])]),n("li",null,[n("p",null,[H,n("a",M,[j,a(e)])])])])])}const X=l(r,[["render",U],["__file","49.html.vue"]]);export{X as default};
